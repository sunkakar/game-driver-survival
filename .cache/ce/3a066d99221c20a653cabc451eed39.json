{"id":"node_modules/phaser/src/display/color/IntegerToColor.js","dependencies":[{"name":"C:\\Users\\User\\Desktop\\game-driver-survival\\package.json","includedInParent":true,"mtime":1576076179561},{"name":"C:\\Users\\User\\Desktop\\game-driver-survival\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1575565291724},{"name":"./Color","loc":{"line":7,"column":20},"parent":"C:\\Users\\User\\Desktop\\game-driver-survival\\node_modules\\phaser\\src\\display\\color\\IntegerToColor.js","resolved":"C:\\Users\\User\\Desktop\\game-driver-survival\\node_modules\\phaser\\src\\display\\color\\Color.js"},{"name":"./IntegerToRGB","loc":{"line":8,"column":27},"parent":"C:\\Users\\User\\Desktop\\game-driver-survival\\node_modules\\phaser\\src\\display\\color\\IntegerToColor.js","resolved":"C:\\Users\\User\\Desktop\\game-driver-survival\\node_modules\\phaser\\src\\display\\color\\IntegerToRGB.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Color = require('./Color');\r\nvar IntegerToRGB = require('./IntegerToRGB');\r\n\r\n/**\r\n * Converts the given color value into an instance of a Color object.\r\n *\r\n * @function Phaser.Display.Color.IntegerToColor\r\n * @since 3.0.0\r\n *\r\n * @param {integer} input - The color value to convert into a Color object.\r\n *\r\n * @return {Phaser.Display.Color} A Color object.\r\n */\r\nvar IntegerToColor = function (input)\r\n{\r\n    var rgb = IntegerToRGB(input);\r\n\r\n    return new Color(rgb.r, rgb.g, rgb.b, rgb.a);\r\n};\r\n\r\nmodule.exports = IntegerToColor;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/display/color/IntegerToColor.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"node_modules/phaser/src/display/color/IntegerToColor.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Color = require('./Color');\r\nvar IntegerToRGB = require('./IntegerToRGB');\r\n\r\n/**\r\n * Converts the given color value into an instance of a Color object.\r\n *\r\n * @function Phaser.Display.Color.IntegerToColor\r\n * @since 3.0.0\r\n *\r\n * @param {integer} input - The color value to convert into a Color object.\r\n *\r\n * @return {Phaser.Display.Color} A Color object.\r\n */\r\nvar IntegerToColor = function (input)\r\n{\r\n    var rgb = IntegerToRGB(input);\r\n\r\n    return new Color(rgb.r, rgb.g, rgb.b, rgb.a);\r\n};\r\n\r\nmodule.exports = IntegerToColor;\r\n"},"lineCount":28}},"error":null,"hash":"cd4efcc70c9f916d4fcee51d467b709c","cacheData":{"env":{}}}