{"id":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","dependencies":[{"name":"C:\\Users\\User\\Desktop\\game-driver-survival\\package.json","includedInParent":true,"mtime":1576076179561},{"name":"C:\\Users\\User\\Desktop\\game-driver-survival\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1575565291724}],"generated":{"js":"module.exports = [\r\n    '#define SHADER_NAME PHASER_BITMAP_MASK_FS',\r\n    '',\r\n    'precision mediump float;',\r\n    '',\r\n    'uniform vec2 uResolution;',\r\n    'uniform sampler2D uMainSampler;',\r\n    'uniform sampler2D uMaskSampler;',\r\n    'uniform bool uInvertMaskAlpha;',\r\n    '',\r\n    'void main()',\r\n    '{',\r\n    '    vec2 uv = gl_FragCoord.xy / uResolution;',\r\n    '    vec4 mainColor = texture2D(uMainSampler, uv);',\r\n    '    vec4 maskColor = texture2D(uMaskSampler, uv);',\r\n    '    float alpha = mainColor.a;',\r\n    '',\r\n    '    if (!uInvertMaskAlpha)',\r\n    '    {',\r\n    '        alpha *= (maskColor.a);',\r\n    '    }',\r\n    '    else',\r\n    '    {',\r\n    '        alpha *= (1.0 - maskColor.a);',\r\n    '    }',\r\n    '',\r\n    '    gl_FragColor = vec4(mainColor.rgb * alpha, alpha);',\r\n    '}',\r\n    ''\r\n].join('\\n');\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}}],"sources":{"node_modules/phaser/src/renderer/webgl/shaders/BitmapMask-frag.js":"module.exports = [\r\n    '#define SHADER_NAME PHASER_BITMAP_MASK_FS',\r\n    '',\r\n    'precision mediump float;',\r\n    '',\r\n    'uniform vec2 uResolution;',\r\n    'uniform sampler2D uMainSampler;',\r\n    'uniform sampler2D uMaskSampler;',\r\n    'uniform bool uInvertMaskAlpha;',\r\n    '',\r\n    'void main()',\r\n    '{',\r\n    '    vec2 uv = gl_FragCoord.xy / uResolution;',\r\n    '    vec4 mainColor = texture2D(uMainSampler, uv);',\r\n    '    vec4 maskColor = texture2D(uMaskSampler, uv);',\r\n    '    float alpha = mainColor.a;',\r\n    '',\r\n    '    if (!uInvertMaskAlpha)',\r\n    '    {',\r\n    '        alpha *= (maskColor.a);',\r\n    '    }',\r\n    '    else',\r\n    '    {',\r\n    '        alpha *= (1.0 - maskColor.a);',\r\n    '    }',\r\n    '',\r\n    '    gl_FragColor = vec4(mainColor.rgb * alpha, alpha);',\r\n    '}',\r\n    ''\r\n].join('\\n');\r\n"},"lineCount":31}},"error":null,"hash":"5f9400e752c7cb1dac3c8f0c4e213933","cacheData":{"env":{}}}