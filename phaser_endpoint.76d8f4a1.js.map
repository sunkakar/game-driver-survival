{"version":3,"sources":["scenes/ACTIVE_SCENE.js","scenes/LoadScene.js","scenes/MenuScene.js","scenes/MinimapScene.js","scenes/GameOverScene.js","scenes/AboutScene.js","scenes/InstructionScene.js","phaser_endpoint.js"],"names":["ActiveScene","AvailableScenes","Load","Menu","Minimap","GameOver","About","Instruction","Scene","LoadScene","key","Phaser","msg","console","log","loadBar","add","graphics","fillStyle","color","i","load","spritesheet","frameHeight","frameWidth","image","audio","on","percentage","fillRect","game","renderer","height","width","scene","start","MenuScene","background","setOrigin","displayWidth","displayHeight","sound","play","menu_music","sys","config","setDepth","setScale","carmouse","sprite","setVisible","playButton","text","font","setShadow","setResolution","setInteractive","y","instructionsButton","AboutButton","controls","HighlightBar","rightTurn","leftTurn","MinimapScene","player","health","_player","_text","_health","_score","_socialscore","_socialscorevalue","_lostGame","_phone","_data","_lastphoneEvent","_phoneEventTimer","_phonescreen_bg","_option1","_option2","_option3","_F11","_angularVel","_thrust","_solved","time","now","tilemapTiledJSON","map","make","tilemap","tileset","addTilesetImage","tileset2","collisionLayer","createDynamicLayer","setCollisionByProperty","canCollide","matter","world","convertTilemapLayer","thrust","fill","padding","x","backgroundColor","setScrollFactor","camera","cameras","main","startFollow","setBounds","healthvalue","event","bodyA","bodyB","Math","floor","random","setText","endGame","_question","setFontSize","setAlpha","phoneHighlight","input","keyboard","addKey","Input","Keyboard","KeyCodes","E","Q","delta","cursors","addKeys","down","SPACE","left","A","right","D","setFrictionAir","setMass","setFixedRotation","isDown","JustDown","setAngularVelocity","PI","onPhoneSubmit","q","o1","o2","o3","correct_o","callback","_correct_o","tweens","targets","alpha","duration","ease","loop","option","GameOverScene","AboutScene","Instructions","InstructionScene","type","AUTO","parent","physics","default","gravity","Game"],"mappings":"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","file":"phaser_endpoint.76d8f4a1.js","sourceRoot":"..","sourcesContent":["// Contains Scenes\r\n\r\nexport const ActiveScene = {\r\n    AvailableScenes: {\r\n        Load: \"Load\",\r\n        Menu: \"Menu\",\r\n        Minimap: \"Minimap\",\r\n        GameOver: \"GameOver\",\r\n        About: \"About\",\r\n        Instruction: \"Instruction\"\r\n    }\r\n}","import { ActiveScene } from './ACTIVE_SCENE.js';\r\n\r\n// Load Scene\r\n/// Loads assets and Transfers over control to the Menu Scene\r\n\r\nexport class LoadScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: ActiveScene.AvailableScenes.Load\r\n        })\r\n    }\r\n\r\n    init(msg){\r\n        console.log(\"Load: \",msg);\r\n    }\r\n\r\n    preload(){\r\n\r\n        let loadBar = this.add.graphics({\r\n            fillStyle: {\r\n                color: 0xffffff\r\n            }\r\n        })\r\n\r\n        for(let i = 0; i< 100; i++)\r\n        {\r\n            this.load.spritesheet(\"grass_tiles\",\"../asset/spritesheet/grass_ss.png\" , {\r\n                frameHeight: 512,\r\n                frameWidth: 512\r\n            })\r\n\r\n            this.load.image('car', './asset/png/car/Car_1_Main_Positions/Car_Sprite.png');\r\n            this.load.image('menu_logo', './asset/menu/game-logo.png');\r\n            this.load.image('menu_bg', './asset/menu/menu-bg.png');\r\n\r\n            //this.load.image(\"tiles\", \"../dist/asset/spritesheet/roads2W.png\");\r\n            //this.load.tilemapTiledJSON(\"map\", \"../dist/asset/spritesheet/map_updated.json\");\r\n\r\n            //this.load.audio()\r\n            this.load.audio('menu_music', './asset/menu/Sci-fi Pulse Loop.mp3');\r\n        }\r\n\r\n        this.load.on(\"progress\", (percentage) => {\r\n                loadBar.fillRect(0, this.game.renderer.height / 2, this.game.renderer.width * percentage, 50);\r\n        })\r\n    }\r\n    \r\n\r\n    create(){\r\n        //this.scene.add(ActiveScene.AvailableScenes.Menu, MenuScene, false)\r\n        this.scene.start( ActiveScene.AvailableScenes.Menu, \"Load -> Menu\" );\r\n        \r\n    }\r\n}","import { ActiveScene } from './ACTIVE_SCENE.js';\r\n\r\n// Menu Scene\r\n/// Displays the Menu and shows options\r\n\r\nexport class MenuScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: ActiveScene.AvailableScenes.Menu\r\n        })\r\n    }\r\n\r\n    init(msg){\r\n        console.log(\"Menu: \" , msg);\r\n    }\r\n\r\n    preload(){\r\n    }\r\n\r\n    create(){\r\n\r\n        const background = this.add.image('base_map', 'Decor/Racing_Lights (2).png').setOrigin(0) //this.add.image(0,0, \"menu_bg\").setOrigin(0);\r\n        background.displayWidth = 800;\r\n        background.displayHeight = 600;\r\n\r\n        // Height and Width for screen\r\n        let menu_music = this.sound.play('menu_music');\r\n        //menu_music.setVolume(0.7);\r\n        const { width, height } = this.sys.game.config;\r\n\r\n        const logo = this.add.image(400, 150, 'menu_logo' ).setDepth(2);\r\n        logo.setScale(2);\r\n\r\n        let carmouse = this.add.sprite(250,310,'car');\r\n        carmouse\r\n        carmouse.setScale(1/16).setOrigin(0).setVisible(false);\r\n        //carmouse.setRotation(10);\r\n\r\n        let playButton = //this.add.text(350,300, 'Play', { fontFamily: '\"Roboto Condensed\"' });\r\n        this.add\r\n        .text(350, 300 , \"Play\", {font: \"18px monospace\", color: \"white\"}).setShadow(5, 5, \"#5588EE\", 0, true, true);\r\n        playButton.setScale(3).setResolution(5);\r\n        playButton.setInteractive();\r\n        playButton.on(\"pointerover\", () => {\r\n            carmouse.y = 310;\r\n            carmouse.setVisible(true);\r\n        })\r\n\r\n        playButton.on(\"pointerout\", () => {\r\n            carmouse.setVisible(false);\r\n        })\r\n\r\n        playButton.on(\"pointerup\", () => {\r\n            console.log(\"Start Game\");\r\n            this.scene.start( ActiveScene.AvailableScenes.Minimap, \"Menu -> Minimap\" );\r\n        })\r\n\r\n        let instructionsButton = this.add.text(350, 400 , \"Instructions\", {font: \"15px monospace\", color: \"white\"}).setShadow(5, 5, \"#5588EE\", 0, true, true);\r\n        instructionsButton.setScale(3).setResolution(5);\r\n        instructionsButton.setInteractive();\r\n        instructionsButton.on(\"pointerover\", () => {\r\n            carmouse.y = 410;\r\n            carmouse.setVisible(true);\r\n        })\r\n\r\n        instructionsButton.on(\"pointerout\", () => {\r\n            carmouse.setVisible(false);\r\n        })\r\n\r\n        instructionsButton.on(\"pointerup\", () => {\r\n            console.log(\"Start Game\");\r\n            this.scene.start( ActiveScene.AvailableScenes.Instruction, \"Menu -> Instructions\" );\r\n        })\r\n\r\n\r\n        let AboutButton = this.add.text(350, 500 , \"About\", {font: \"15px monospace\", color: \"white\"}).setShadow(5, 5, \"#5588EE\", 0, true, true);\r\n        AboutButton.setScale(3).setResolution(5);\r\n        AboutButton.setInteractive();\r\n        AboutButton.on(\"pointerover\", () => {\r\n            carmouse.y = 510;\r\n            carmouse.setVisible(true);\r\n        })\r\n\r\n        AboutButton.on(\"pointerout\", () => {\r\n            carmouse.setVisible(false);\r\n        })\r\n\r\n        AboutButton.on(\"pointerup\", () => {\r\n            console.log(\"Start Game\");\r\n            this.scene.start( ActiveScene.AvailableScenes.About, \"Menu -> Instructions\" );\r\n        })\r\n    }\r\n}","import { ActiveScene } from './ACTIVE_SCENE.js';\r\n\r\n\r\nlet controls;\r\nlet HighlightBar;\r\nlet rightTurn;\r\nlet leftTurn;\r\n\r\nexport class MinimapScene extends Phaser.Scene{\r\n    constructor(player = null, health = 100){\r\n        super({\r\n            key: ActiveScene.AvailableScenes.Minimap\r\n        })\r\n        this._player = player;\r\n        this._text = \"Health: 100%\";\r\n        this._health = health;\r\n        this._score = null;\r\n        this._socialscore = null;\r\n        this._socialscorevalue = 10;\r\n        this._lostGame = false;\r\n        this._phone = null;\r\n        this._data = [];\r\n        this._lastphoneEvent = null;\r\n        this._phoneEventTimer = null; \r\n        this._phonescreen_bg = null;\r\n        this._option1 = null;\r\n        this._option2 = null;\r\n        this._option3 = null;\r\n        this._F11 = null;\r\n        this._angularVel = 0.03;\r\n        this._thrust = 0.15;\r\n        this._solved = 0;\r\n    }\r\n\r\n    init(msg)\r\n    {\r\n        console.log(\"Minimap: \", msg );\r\n\r\n        this._text = \"Health: 100%\";\r\n        this._health = 100;\r\n        this._score = null;\r\n        this._socialscore = null;\r\n        this._socialscorevalue = 10;\r\n        this._lostGame = false;\r\n        this._phone = null;\r\n        this._data = [];\r\n        this._lastphoneEvent = this.time.now;\r\n        this._phoneEventTimer = 20;\r\n        this._phonescreen_bg = null;\r\n        this._option1 = null;\r\n        this._option2 = null;\r\n        this._option3 = null;\r\n        this._F11 = null;\r\n        this._angularVel = 0.03;\r\n        this._thrust = 0.15;\r\n        this._solved = 0;\r\n    }\r\n\r\n    preload()\r\n    {\r\n        //this.load.audio('menu_music', './asset/menu/Sci-fi Pulse Loop.mp3');\r\n        this.load.audio('crash_1', './asset/collision_audio/66780__kevinkace__crate-break-4.mp3');\r\n        this.load.audio('crash_2', './asset/collision_audio/237375__squareal__car-crash.mp3');\r\n\r\n        this.load.image('menu_bg', './asset/menu/menu-bg.png');\r\n        //this.load.spritesheet('base_tiles_ss', './asset/spritesheet/tiles_spritesheet.png');\r\n        //this.load.atlas('base_map', './asset/spritesheet/tiles_spritesheet.png', 'asset/spritesheet/tiles_spritesheet.json');\r\n\r\n        this.load.image(\"roads2W\", \"./asset/spritesheet/roads2W.png\");\r\n        this.load.image(\"RPGTileset\", \"./asset/spritesheet/TilesetPyxel.png\");\r\n        this.load.tilemapTiledJSON(\"map\", \"./asset/spritesheet/map_updated.json\");\r\n\r\n        this.load.image(\"phone\", \"./asset/phone/mobile.png\");\r\n        this.load.image(\"screen_bg\", \"./asset/phone/bg.jpg\");\r\n        this.load.image(\"screen_bg\", \"./asset/phone/speech-bubble.png\");\r\n\r\n        HighlightBar = this.add.graphics({fillStyle: {color: 0xff4f1f}});\r\n    }\r\n\r\n    create()\r\n    {   \r\n        // Screen Data\r\n        const { width, height } = this.sys.game.config;\r\n\r\n        // Map Setup\r\n        const map = this.make.tilemap({ key: \"map\" });\r\n        const tileset = map.addTilesetImage(\"roads2W\", \"roads2W\");\r\n        const tileset2 = map.addTilesetImage(\"RPG TileSet\", \"RPGTileset\");\r\n\r\n        // Map rendered based on Layers \r\n        const baseLayer = map.createDynamicLayer(\"Map\", tileset, 0, 0).setScale(3);\r\n        const collisionLayer = map.createDynamicLayer(\"Trees\", tileset2, 0, 0).setScale(3);\r\n        const layer3 = map.createDynamicLayer(\"Bridge\", tileset2, 0, 0).setScale(3);\r\n        collisionLayer.setCollisionByProperty({ canCollide: true });\r\n\r\n        this.matter.world.convertTilemapLayer(collisionLayer);\r\n    \r\n\r\n        //collisionLayer.setDepth(2);\r\n        this._player = this.matter.add.image(450,150,'car').setScale(1/22);\r\n        this._player.thrust(0.1);\r\n        //this._player.setInertia(body,10);\r\n        \r\n        //this._F11 = this.input.keyboard.addKey(this.Keyboard.F11);  //Fix\r\n        this._score = this.add.text(16, 16, this._text, {\r\n                font: \"18px monospace\",\r\n                fill: \"#ffffff\",\r\n                padding: { x: 20, y: 10 },\r\n                backgroundColor: \"#050505\"\r\n            })\r\n            .setScrollFactor(0);\r\n\r\n        this._socialscore = this.add.text(16, 60, \"Social Score: 10/10\", {\r\n                font: \"18px monospace\",\r\n                fill: \"#ffffff\",\r\n                padding: { x: 20, y: 10 },\r\n                backgroundColor: \"#050505\"\r\n            })\r\n            .setScrollFactor(0);\r\n        \r\n        // Camera View Settings\r\n        const camera = this.cameras.main;\r\n        camera.startFollow(this._player);\r\n        camera.setBounds(0, 0, 2300, 1530);\r\n\r\n\r\n        // DEBUG Rules\r\n        // this.matter.world.createDebugGraphic();\r\n        // this.matter.world.drawDebug = false;\r\n        // this.input.keyboard.on(\"keydown_D\", event => {\r\n        //     this.matter.world.drawDebug = !this.matter.world.drawDebug;\r\n        //     this.matter.world.debugGraphic.clear();\r\n        // });\r\n\r\n        // Update Damage taken by player \r\n        let healthvalue = this._health;\r\n        this.matter.world.on('collisionstart', function (event, bodyA, bodyB) \r\n        {\r\n            let crash_sound = this.scene.sound.play('crash_1');\r\n            healthvalue = healthvalue - Math.floor(Math.random()*(8)+1);\r\n            if(healthvalue > 0 && this.scene._socialscorevalue > 0 )\r\n            {\r\n                this.scene._text = \"Health: \" + healthvalue + \"%\";\r\n                this.scene._score.setText(this.scene._text);    \r\n            } \r\n            else\r\n            {\r\n                // Game Over: Send to new Game Over scene\r\n                let lose = this.scene.sound.play('crash_2');\r\n                this.scene.endGame();\r\n            }\r\n        });\r\n\r\n\r\n        // Phone Graphic\r\n        /// We create a Container for the Phone \r\n        this._phone = this.add.image( width*0.85 , height*0.8 ,\"phone\").setScale(0.5).setDepth(10).setScrollFactor(0);\r\n        this._phonescreen_bg = this.add.image(width*0.85,height*0.85, 'screen_bg').setScale(0.9).setDepth(8).setScrollFactor(0);\r\n        this._question = this.add.text(width*0.75,height*0.6, \"Wanna Hangout?\", {\r\n            font: \"15px monospace\",\r\n            fill: \"#ffffff\",padding: { x: 15, y: 10 },backgroundColor: \"#000000\"}).setDepth(11).setScrollFactor(0).setResolution(10);\r\n        this._option1 = this.add.text(width*0.78,height*0.7, 'Bye').setFontSize(15).setDepth(11).setScrollFactor(0);\r\n        this._option2 = this.add.text(width*0.78,height*0.8, 'I Dont Care').setFontSize(15).setDepth(11).setScrollFactor(0);\r\n        this._option3 = this.add.text(width*0.78,height*0.9, 'Maybe').setFontSize(15).setDepth(11).setScrollFactor(0);\r\n    \r\n\r\n        this._phone.setAlpha(0);\r\n        this._phonescreen_bg.setAlpha(0);\r\n        this._question.setAlpha(0);\r\n        this._option1.setAlpha(0);\r\n        this._option2.setAlpha(0);\r\n        this._option3.setAlpha(0);\r\n          \r\n\r\n        //Interactive Setup\r\n        this.phoneHighlight(this._option1);\r\n        this.phoneHighlight(this._option2);\r\n        this.phoneHighlight(this._option3);\r\n\r\n\r\n        \r\n        //let timedEvent = this.time.now;\r\n        //console.log(timedEvent);\r\n\r\n        \r\n        \r\n        //delayedCall(3000, this.onPhoneSubmit, [], this);\r\n        rightTurn = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.E);\r\n        leftTurn = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.Q);\r\n\r\n    }\r\n\r\n    update(time, delta)\r\n    {\r\n        console.log(\"Thrust: \", this._thrust);\r\n\r\n        let cursors = this.input.keyboard.addKeys({\r\n            //up:Phaser.Input.Keyboard.KeyCodes.W,\r\n            down:Phaser.Input.Keyboard.KeyCodes.SPACE,\r\n            left:Phaser.Input.Keyboard.KeyCodes.A,\r\n            right:Phaser.Input.Keyboard.KeyCodes.D\r\n        });\r\n        \r\n        const { width, height } = this.sys.game.config;\r\n\r\n        this._player.setFrictionAir(0.15);\r\n        this._player.setMass(100);\r\n        this._player.setFixedRotation();\r\n\r\n        // CONSTANT FORWARD MOTION\r\n        this._player.thrust(this._thrust);\r\n\r\n        if (cursors.down.isDown)\r\n        {\r\n            this._player.thrust(-this._thrust/2);\r\n        }\r\n\r\n\r\n        // Turning Motion\r\n        if (Phaser.Input.Keyboard.JustDown(rightTurn))\r\n        {\r\n            this._player.setAngularVelocity( ( Math.PI * 18 ) / 180);\r\n        }\r\n        else if (Phaser.Input.Keyboard.JustDown(leftTurn))\r\n        {\r\n            this._player.setAngularVelocity( ( - Math.PI * 18 ) / 180);\r\n        }\r\n        if (cursors.left.isDown)\r\n        {\r\n            this._player.setAngularVelocity( - this._angularVel);   \r\n        }\r\n        else if (cursors.right.isDown)\r\n        {\r\n            this._player.setAngularVelocity( this._angularVel);\r\n        }\r\n        \r\n        // if (cursors.leftTurn.isDown)\r\n        // {\r\n        //     this._player.setAngularVelocity( - Math.PI / 2);   \r\n        // }\r\n        // else if (cursors.rightTurn.isDown)\r\n        // {\r\n        //     this._player.setAngularVelocity( Math.PI / 2);   \r\n        // }\r\n        // if(this._F11.isDown)\r\n        // {\r\n        //     /**\r\n        //      * this._map.height = window.screen.height;\r\n        //      * this._map.width = window.screen.width;\r\n        //      */\r\n        // }\r\n\r\n\r\n        // Timer Setup for Phone Events\r\n        if(this.time.now - (this._lastphoneEvent + this._phoneEventTimer*1000) > 0)\r\n        {\r\n            let i = this._solved;\r\n            console.log(i);\r\n            switch(i)\r\n            {\r\n                case 0:  this.onPhoneSubmit(\"How was your day?\", \"💩\" , \"💩\" , \"😀\", \"😀\"); break;\r\n                case 1:  this.onPhoneSubmit(\"Wanna Go Out?\", \"With U?😂\" , \"💩\" , \"Yes!\", \"Yes!\"); break;\r\n                case 2:  this.onPhoneSubmit(\"I'm Leaving You?\", \"Okay\" , \"Lmao\" , \"NO\", \"NO\"); break;\r\n                default: i = 0;\r\n            }\r\n            this._solved = i+1;\r\n\r\n        }\r\n        else\r\n        {\r\n            //Nothing\r\n        }\r\n\r\n\r\n        // Lose if Score too low \r\n        if(this._socialscorevalue <= 0)\r\n        {\r\n            this.endGame();\r\n        }\r\n\r\n    }\r\n\r\n    endGame() {\r\n        this.scene.start( ActiveScene.AvailableScenes.GameOver, \"Minimap -> Game Over\" );\r\n    }\r\n\r\n    onPhoneSubmit (q, o1, o2, o3, correct_o, callback)\r\n    {\r\n        this._question.setText(q).setResolution(10);\r\n        this._option1.setText(o1).setResolution(10);\r\n        this._option2.setText(o2).setResolution(10);\r\n        this._option3.setText(o3).setResolution(10);\r\n        this._correct_o = (correct_o);\r\n\r\n        console.log(\"Phone Event Triggerrred\");\r\n        this._lastphoneEvent = this.time.now;\r\n\r\n        if(this._phoneEventTimer - 1 > 10)\r\n        {\r\n            // Fade In Phone Overlay\r\n            this.tweens.add({targets: this._phone,alpha: 1,duration: 2000,ease: 'Power2'}, this);\r\n            this.tweens.add({targets: this._phonescreen_bg,alpha: 1,duration: 2000,ease: 'Power2'}, this);\r\n            this.tweens.add({targets: this._question,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n            this.tweens.add({targets: this._option1,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n            this.tweens.add({targets: this._option2,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n            this.tweens.add({targets: this._option3,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n\r\n            this._phoneEventTimer -= 1;\r\n        }\r\n        else \r\n        {\r\n            //Do Nothing\r\n            // Fade In Phone Overlay\r\n            this.tweens.add({targets: this._phone,alpha: 1,duration: 1000,ease: 'Power2'}, this);\r\n            this.tweens.add({targets: this._phonescreen_bg,alpha: 1,duration: 1000,ease: 'Power2'}, this);\r\n            this.tweens.add({targets: this._question,alpha: 1,duration: 1000,ease: 'Power2',loop: -1}, this);\r\n            this.tweens.add({targets: this._option1,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n            this.tweens.add({targets: this._option2,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n            this.tweens.add({targets: this._option3,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n            console.log(\"Fastest Speed\");\r\n        }\r\n        \r\n\r\n        \r\n    }\r\n\r\n    phoneHighlight(option) \r\n    {\r\n\r\n        option.setInteractive();\r\n        option.on(\"pointerover\", () => {\r\n            option.setScale(1.5);\r\n        })\r\n\r\n        option.on(\"pointerout\", () => {\r\n            option.setScale(1);\r\n        })\r\n\r\n        option.on(\"pointerup\", () => {\r\n            // Submission Check\r\n            console.log(\"Submission\", option._text);\r\n            this._phone.setAlpha(0);\r\n            this._phonescreen_bg.setAlpha(0);\r\n            this._question.setAlpha(0);\r\n            this._option1.setAlpha(0);\r\n            this._option2.setAlpha(0);\r\n            this._option3.setAlpha(0);\r\n\r\n            // Difficulty Increased\r\n            this._angularVel = this._angularVel + 0.013;\r\n            this._thrust = this._thrust + 0.05;\r\n\r\n            if(this._correct_o !== option._text)\r\n            {\r\n                this._socialscorevalue -= 5; \r\n                this._socialscore.setText(\"Social Score: \" + this._socialscorevalue + \"/10\");    \r\n            }\r\n        })\r\n    }\r\n\r\n    phoneResponseTimer(time)\r\n    {\r\n        console.log(\"Here\");\r\n    }\r\n\r\n}","import { ActiveScene } from './ACTIVE_SCENE.js';\r\n\r\n// Menu Scene\r\n/// Displays the Menu and shows options\r\n\r\nexport class GameOverScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: ActiveScene.AvailableScenes.GameOver\r\n        })\r\n    }\r\n\r\n    init(msg){\r\n        console.log(\"GameOver: \",msg);\r\n    }\r\n\r\n    preload(){\r\n    }\r\n\r\n    create(){\r\n        // Height and Width for screen\r\n        const { width, height } = this.sys.game.config;\r\n\r\n        const logo = this.add.image(400, 150, 'menu_logo' ).setDepth(2);\r\n        logo.setScale(2);\r\n\r\n        let carmouse = this.add.sprite(300,300,'car');\r\n        carmouse.setScale(1/16).setOrigin(0).setVisible(false);\r\n\r\n        let playButton = //this.add.text(350,300, 'Play', { fontFamily: '\"Roboto Condensed\"' });\r\n        this.add\r\n        .text(220, 300 , \"Play Again!\", {font: \"18px monospace\", color: \"white\"}).setShadow(5, 5, \"#5588EE\", 0, true, true);\r\n        playButton.setScale(3).setResolution(5);\r\n        playButton.setInteractive();\r\n        playButton.on(\"pointerover\", () => {\r\n            carmouse.setVisible(true);\r\n        })\r\n\r\n        playButton.on(\"pointerout\", () => {\r\n            carmouse.setVisible(false);\r\n        })\r\n\r\n        playButton.on(\"pointerup\", () => {\r\n            console.log(\"Start Game\");\r\n            this.scene.start( ActiveScene.AvailableScenes.Menu, \"GameOver -> Menu\" );\r\n        })\r\n    }\r\n}","import { ActiveScene } from './ACTIVE_SCENE.js';\r\n\r\n// Menu Scene\r\n/// Displays the Menu and shows options\r\n\r\nexport class AboutScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: ActiveScene.AvailableScenes.About\r\n        })\r\n    }\r\n\r\n    init(msg){\r\n        console.log(\"About: \" , msg);\r\n    }\r\n\r\n    preload(){\r\n    }\r\n\r\n    create(){\r\n        // Height and Width for screen\r\n        let menu_music = this.sound.play('menu_music');\r\n        //menu_music.setVolume(0.7);\r\n        const { width, height } = this.sys.game.config;\r\n\r\n        const logo = this.add.image(400, 150, 'menu_logo' ).setDepth(2);\r\n        logo.setScale(2);\r\n\r\n        let carmouse = this.add.sprite(250,310,'car');\r\n        carmouse\r\n        carmouse.setScale(1/16).setOrigin(0).setVisible(false);\r\n        //carmouse.setRotation(10);\r\n\r\n        let playButton = //this.add.text(350,300, 'Play', { fontFamily: '\"Roboto Condensed\"' });\r\n        this.add\r\n        .text(350, 300 , \"Play\", {font: \"18px monospace\", color: \"white\"}).setShadow(5, 5, \"#5588EE\", 0, true, true);\r\n        playButton.setScale(3).setResolution(5);\r\n        playButton.setInteractive();\r\n        playButton.on(\"pointerover\", () => {\r\n            carmouse.y = 310;\r\n            carmouse.setVisible(true);\r\n        })\r\n\r\n        playButton.on(\"pointerout\", () => {\r\n            carmouse.setVisible(false);\r\n        })\r\n\r\n        playButton.on(\"pointerup\", () => {\r\n            console.log(\"Start Game\");\r\n            this.scene.start( ActiveScene.AvailableScenes.Minimap, \"Menu -> Minimap\" );\r\n        })\r\n\r\n        let instructionsButton = this.add.text(350, 400 , \"Instructions\", {font: \"15px monospace\", color: \"white\"}).setShadow(5, 5, \"#5588EE\", 0, true, true);\r\n        instructionsButton.setScale(3).setResolution(5);\r\n        instructionsButton.setInteractive();\r\n        instructionsButton.on(\"pointerover\", () => {\r\n            carmouse.y = 410;\r\n            carmouse.setVisible(true);\r\n        })\r\n\r\n        instructionsButton.on(\"pointerout\", () => {\r\n            carmouse.setVisible(false);\r\n        })\r\n\r\n        instructionsButton.on(\"pointerup\", () => {\r\n            console.log(\"Start Game\");\r\n            this.scene.start( ActiveScene.AvailableScenes.Instructions, \"Menu -> Instructions\" );\r\n        })\r\n\r\n\r\n        let AboutButton = this.add.text(350, 500 , \"About\", {font: \"15px monospace\", color: \"white\"}).setShadow(5, 5, \"#5588EE\", 0, true, true);\r\n        AboutButton.setScale(3).setResolution(5);\r\n        AboutButton.setInteractive();\r\n        AboutButton.on(\"pointerover\", () => {\r\n            carmouse.y = 510;\r\n            carmouse.setVisible(true);\r\n        })\r\n\r\n        AboutButton.on(\"pointerout\", () => {\r\n            carmouse.setVisible(false);\r\n        })\r\n\r\n        AboutButton.on(\"pointerup\", () => {\r\n            console.log(\"Start Game\");\r\n            this.scene.start( ActiveScene.AvailableScenes.About, \"Menu -> Instructions\" );\r\n        })\r\n    }\r\n}","import { ActiveScene } from './ACTIVE_SCENE.js';\r\n\r\n// Menu Scene\r\n/// Displays the Menu and shows options\r\n\r\nexport class InstructionScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: ActiveScene.AvailableScenes.Instruction\r\n        })\r\n    }\r\n\r\n    init(msg){\r\n        console.log(\"Instruction: \" , msg);\r\n    }\r\n\r\n    preload(){\r\n    }\r\n\r\n    create(){\r\n        // Height and Width for screen\r\n        let menu_music = this.sound.play('menu_music');\r\n        //menu_music.setVolume(0.7);\r\n        const { width, height } = this.sys.game.config;\r\n\r\n        const logo = this.add.image(400, 150, 'menu_logo' ).setDepth(2);\r\n        logo.setScale(2);\r\n\r\n        let carmouse = this.add.sprite(250,310,'car');\r\n        carmouse\r\n        carmouse.setScale(1/16).setOrigin(0).setVisible(false);\r\n        //carmouse.setRotation(10);\r\n\r\n        let playButton = //this.add.text(350,300, 'Play', { fontFamily: '\"Roboto Condensed\"' });\r\n        this.add\r\n        .text(350, 300 , \"Play\", {font: \"18px monospace\", color: \"white\"}).setShadow(5, 5, \"#5588EE\", 0, true, true);\r\n        playButton.setScale(3).setResolution(5);\r\n        playButton.setInteractive();\r\n        playButton.on(\"pointerover\", () => {\r\n            carmouse.y = 310;\r\n            carmouse.setVisible(true);\r\n        })\r\n\r\n        playButton.on(\"pointerout\", () => {\r\n            carmouse.setVisible(false);\r\n        })\r\n\r\n        playButton.on(\"pointerup\", () => {\r\n            console.log(\"Start Game\");\r\n            this.scene.start( ActiveScene.AvailableScenes.Minimap, \"Instruction -> Minimap\" );\r\n        })\r\n\r\n    }\r\n}","import { LoadScene } from './scenes/LoadScene';\r\nimport { MenuScene } from './scenes/MenuScene';\r\nimport { MinimapScene } from './scenes/MinimapScene';\r\nimport { GameOverScene } from './scenes/GameOverScene';\r\nimport { AboutScene } from './scenes/AboutScene';\r\nimport { InstructionScene } from './scenes/InstructionScene';\r\n\r\n// Setup Config\r\nconst config = {\r\n    type: Phaser.AUTO, // Which renderer to use\r\n    width: 800, // Canvas width in pixels\r\n    height: 600, // Canvas height in pixels\r\n    backgroundColor: '#f09020',\r\n    parent: \"game-container\",\r\n    scene: [\r\n      LoadScene, \r\n      MenuScene,\r\n      MinimapScene,\r\n      GameOverScene,\r\n      AboutScene,\r\n      InstructionScene\r\n    ],\r\n    // render:{\r\n    //   pixelArt: true\r\n    // },\r\n    physics: {\r\n      default: \"matter\",\r\n      matter: {\r\n        gravity: { x: 0, y: 0 } // 2D Game does not need Gravity\r\n      }\r\n    }\r\n  };\r\n  \r\n  const game = new Phaser.Game(config);\r\n  \r\n"]}