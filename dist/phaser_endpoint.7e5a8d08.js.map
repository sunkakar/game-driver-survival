{"version":3,"sources":["scenes/ACTIVE_SCENE.js","scenes/LoadScene.js","scenes/MenuScene.js","scenes/MinimapScene.js","scenes/GameOverScene.js","phaser_endpoint.js"],"names":["ActiveScene","AvailableScenes","Load","Menu","Minimap","GameOver","LoadScene","key","msg","console","log","loadBar","add","graphics","fillStyle","color","i","load","spritesheet","frameHeight","frameWidth","image","on","percentage","fillRect","game","renderer","height","width","scene","start","Phaser","Scene","MenuScene","sys","config","logo","setDepth","setScale","carmouse","sprite","setOrigin","setVisible","playButton","text","font","setShadow","setResolution","setInteractive","controls","HighlightBar","MinimapScene","player","health","_player","_text","_health","_score","_socialscore","_lostGame","_phone","_data","_lastphoneEvent","_phoneEventTimer","_phonescreen_bg","_option1","_option2","_option3","_F11","time","now","tilemapTiledJSON","map","make","tilemap","tileset","addTilesetImage","tileset2","baseLayer","createDynamicLayer","collisionLayer","layer3","setCollisionByProperty","canCollide","matter","world","convertTilemapLayer","fill","padding","x","y","backgroundColor","setScrollFactor","socialscore","camera","cameras","main","startFollow","setBounds","createDebugGraphic","drawDebug","input","keyboard","event","debugGraphic","clear","healthvalue","bodyA","bodyB","Math","floor","random","setText","endGame","_question","setFontSize","option1_bar","setAlpha","option2_bar","option3_bar","phoneHighlight","delta","cursors","createCursorKeys","setVelocity","setFrictionAir","setMass","setFixedRotation","up","isDown","thrust","down","left","setAngularVelocity","right","onPhoneSubmit","tweens","targets","alpha","duration","ease","loop","option","highlight","setTint","GameOverScene","type","AUTO","parent","render","pixelArt","physics","default","gravity","Game"],"mappings":";;AKAA;;AACA;;AACA,ALFO,IAAMA,WAAW,GAAG;AACvBC,AIDJ,AHAA,ACAA,ACAA,EHCIA,eAAe,EAAE;AKErB,ALDQC,IAAAA,IAAI,EAAE,MADO;AAEbC,IAAAA,IAAI,EAAE,MAFO;AKIrB,ALDQC,IKCF+B,ALDE/B,MKCI,CLDG,EKCA,ALDE,SAHI;AKKjB8I,ALDI7I,EKCJ6I,ELDI7I,EKCA,EAAE0B,ILDM,EKCA,ALDE,CKCDoH,IADF;AACQ,ALLF;AKMjBvH,ALPuB,CAApB,CKOHA,KAAK,EAAE,GAFI;AAEC;AACZD,EAAAA,MAAM,EAAE,GAHG;AAGE;AACbgE,EAAAA,eAAe,EAAE,SAJN;AAKXyD,EAAAA,MAAM,EAAE,gBALG;AAMXvH,EAAAA,KAAK,EAAE,CACLvB,oBADK,EAEL2B,oBAFK,EAGLkB,0BAHK,EAIL8F,4BAJK,CANI;AAYXI,EAAAA,MAAM,EAAC;AACLC,IAAAA,QAAQ,EAAE;AADL,GAZI;AAeXC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,QADF;AAEPpE,IAAAA,MAAM,EAAE;AACNqE,MAAAA,OAAO,EAAE;AAAEhE,ADrBnB,AHAA,ACAA,ACCA,IAAIxC,IEoBewC,CAAC,EAAE,CAAL,AFpBjB;AEoByBC,ADpBzB,AHAA,ACAA,ACCA,IAAIxC,IEmBqBwC,CAAC,EAAE,KFnB5B;AEmBiB,IDlBJuD,AHAA3I,ACAA2B,GGiBC,CACkB;IFlBnBkB;AEiBC;AAFD;AAfE,CAAf;AAuBE,ADtBE,AHAA,ACAA,IGsBI1B,IAAI,GAAG,IAAIM,MAAM,CAAC2H,CJtBT,ACAA,GGsBF,CAAgBvH,ADtBd,MCsBF,CAAb,EAEA;AACA,ADzBe,AHAA,ACAA,ACAb,0BAAwC;AE0B1C,AF1B0C;AE2B1C,AD3Be,AHAA,ACAA,kFDCH,ACAA,IEAA;AC2BZ,AD1BU5B,AHAAA,ACAAA,ACFgC,MCEhCA,AHAAA,ACAAA,ECFI6C,CCED,AHAA,ACAA,EEAEpD,AHAAA,ACAAA,GCF2B,uBCEfC,AHAAA,ACAAA,eEAZ,AHAA,ACAA,CEA4BI,AHAAH,ACAAC,gCCFpB,IAAmB;AE8B1C,AD7BY,AHAA,ACAA,ACD8B,KCA3B,AHAA,ACAA,GCAckD,MAAa,uEAAJ,GAAI;AE+B1C,AD3BG,AHAA,ACAA;AG4BH,AFhC0C;AEiC1C;AAEA,AFlCM,sFAAM;AEmCZ,AFlCU9C,MAAAA,GAAG,EAAEP,cCIRQ,AHAAA,ACAAA,KEAI,AHAA,ACAA,OCJgBP,eAAZ,CAA4BG;AEmC3C,AD9BMK,AHAAA,ACAAA,ACNM,KAAN,CCMAA,AHAAA,ACAAA,OEAO,AHAA,ACAA,CEACC,AHAAA,ACAAA,GEAR,AHAA,ACAA,CEAY,AHAA,ACAA,QDAZ,ACAA,EDAqBF,ACAAA,EEArB,CHAA,ACAA,CEAyBA,GAAzB;AC+BN,AD9BG,AHAA,ACAA,ACJG,UAAK8C,OAAL,GAAeF,MAAf;AEmCN,AFlCM,UAAKG,KAAL,GAAa,cAAb;AEmCN,AFlCM,UAAKC,OAAL,GAAeH,MAAf;AEmCN,AFlCM,UAAKI,MAAL,GAAc,IAAd,OCGK,AHAA,ACAA,CECR,AFAA;AG+BH,AJhCW,AEFL,UAAKC,YAAL,GAAoB,IAApB;AEmCN,AFlCM,UAAKC,SAAL,GAAiB,KAAjB;AEmCN,AJhCM,AEFA,UFEIhD,AEFCiD,MAAL,CFEW,EEFG,CFEA,GEFd,EFEmBhD,GAAL,CGCV,AHDmBC,ACCnB,QDDU,CAAkB;AIiCtC,ADhCU,AHAAC,ACAA,ACFJ,QFEIA,EEFC+C,KAAL,EFEa,CEFA,CFEE,CEFf;AEmCN,AJhCc9C,AEFR,UFEQA,AEFH+C,KFEQ,EAAE,QEFf,GAAuB,IAAvB;AEmCN,ADjCM,AHDe,ACCf,ACDA,UAAKC,gBAAL,GAAwB,IAAxB;AEmCN,ADnCU,AHD4B,ACC5B,ACCJ,OFFc,CAAd,EEEKC,eAAL,GAAuB,IAAvB,ECC0B,AFAA,KEAK9B,AFAAA,GEAL,AFAA,CEAST,AFAAA,IEAT,AFAA,CEAcU,AFAAA,MEFpC,AFAA;AGoCV,ADpCU,AFAA,ACEJ,UCAQP,AFAAA,ACAHqC,KCFD,AFAA,GCEJ,GAAgB,IAAhB,eCAQrC,AFAAA,KEFJ,AFAA;AGsCV,ADtCU,AHKJ,ACLI,ACGJ,UCDeD,AFAAA,ACCVuC,CFED,IAAIlD,CGLJ,AHKK,ACLL,ECGJ,CFEY,CAAZ,CEFgB,CFEDA,CAAC,EEFhB,CFEkB,GAAlB,EAAuBA,CAAC,EAAxB,EACA,KGJeW,AFAAA,MEFX,AFAA;AGyCV,ADrCM,AHGI,ACHJ,ACAA,UCAMS,AFAAA,ACAD+B,GFGIlD,CGHC,AFAA,GEAG,AHGT,ACHS,CDGCC,AEHd,GAAgB,CCAEN,AFAAA,GEAL,AFAA,ACAb,CCAsBS,AFAAA,GDGlB,CAAsB,CGHb,AFAA,CEAe,AFAA,GEAf,AFAA,EEAoB,AFAA,GEApB,AFAA,EEAyB,AFAA,CDGlC,EAAoC,QGH3B,AFAA,EEAuCgB,AFAAA,QEAvC,AFAA,CEAgD,AFAA,CEAhD,AFAA,CEAb,AFAA,cDGI,EAA0E;AImCpF,ADrCMD,AHGQjB,ACHRiB,ACAA,MCAAA,AFAAA,IEAI,AHGIjB,ACHJ,ACACiD,CCAA9B,AFAAA,GCAL,GAAY,ECAZ,AFAA,CEAc,AFAA,CEAd,AHGmB,ACHnB,ACAA,EFGqB,GADyD;AIoCpF,ADpCM,AHEQlB,ACFR,ACpBoC,UCoBhCmB,AHEInB,ACFJmB,QEAQ,AFAA,EDEM,CGFH,AFAA,CDEK,IGFA3B,AFAAA,GEAL,AFAA,CEAS4B,AFAAA,MEAT,AFAA,CEAgB,AFAA,GEAhB,AFAA,EEAoB,AFAA,GEApB,AFAA,EEAwB,AFAA,KEAxB,AFAA,CEAf,AFAA;AGqCN,ADpCMD,AHD8E,ACC9EA,ACFH,MCEGA,AFAAA,GDDI,KGCI,AFAA,CEACD,AFAAA,QEAT,AFAA,CEAkB,AFAA,IEAE,AFAA,EEApB,AFAA,EEAwBG,AFAAA,SEAxB,AFAA,CEAkC,AFAA,CEAlC,AFAA,EEAqCC,AFAAA,UEArC,AFAA,CEAgD,AFAA,KEAhD,AFAA;AGqCN,ADnCM,AHEI,ACFJ,UEAIC,AFAAA,GDEK1B,IAAL,CAAUI,EGFA,AFAA,GEAG,AHEb,ACFa,CDEG,KAAhB,EAAuB,qDAAvB;AIkCV,ADnCM,AHEI,ACFJ,WEAKT,AFAAA,EDEIK,CGFT,AFAA,CECC2B,AFAAA,EDCG,CAAUvB,CGFd,AFAA,CECM,AFAA,GEDN,AHEI,ACFJ,CDEoB,CGDT,AFAA,GEDX,AFAA,EECiB,AFAA,KDCb,CCFJ,CDEiC,CCDR,KEDzB,EACgC,oBHC5B;AImCV,ADpCuCwB,AHE7B,ACFsBA,QEAOA,AFAPA,IEAW,AFAP,CDErB5B,CGF8B,AFAP,GDE5B,CAAUI,KAAV,CAAgB,MGFY,AFAP,GDErB,EAA2B,0BAA3B,EARJ,CAUI;AIiCV,ADrC+DN,AHKrD,ACL8CA,QEAOA,AFAPA,KEAY,AFAP,EEAS,AFAP,UCJxDP,KACL;AEyCF,ADtCsC,AHO5B,ACPqB,ACFzBC,MAAAA,CCCA,AFAA,EEC0EqC,AFAPA,ICF5D,CAACpC,GAAR,CCCA,AFAA,ACDY,CCEwE,AFAP,CED7E,AFAA,EECuF,AFAP,CEDhF,AFAA,EEC0F,AFAP,ICFnF,EAAyBF,GCCzB,AFAA,ACDA,ECEqG,AFAP,CED9F,AFAA,EECwG,AFAP,IEDjG,AFAA,EEC8G,AFAP,IEDvG,AFAA,CEDA,AFAA;AEGAmC,AHOC,ACPDA,ACFA,MCEAA,AFAAA,KCFKY,KCEK,AFAA,ACFV,CCEWjB,AFAAA,ECFE,MCEb,AFAA,CEAoB,AFAA,CEApB,AFAA,EEAuBS,AFAAA,ICFvB,SCEA,AFAA,CEAqC,AFAA,CEArC,AFAA;AECAJ,AFAAA,ACFA,MCEAA,AFAAA,KCFKmB,KCEK,AFAA,CEACd,AFAAA,SCFX,GAAuB,ECEvB,AFAA,GCF4BqB,IAAL,CAAUC,GAAjC;ACGA3B,AHOA,ACPAA,ACFA,MCEAA,AFAAA,KDOK1B,AETA8C,IFSL,CGPU,AHOAzC,ACPA,CEACA,AFAAA,CDOX,CGPA,AHOa,ACPb,CEAc,AFAA,OCFd,EFSA,CETwB,CFSC,CETzB,CCEA,AFAA,EEA6B,AFAA,MDOHC,MGPS,AFAA,IDOV,EAAgB;AGNrCgB,AHOI5B,ACPJ4B,ACFP,QCEOA,AHOI5B,ACPJ4B,ODOW,CGPH,AHOIf,ACPJ,CEACkB,AFAAA,ODOL,CAAiB,CAAjB,CGPJ,AFAA,CEAoB,AHOI,ACPJ,IEApB,AFAA,CDO4B,CAACjB,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,CAAhD,EAAmD,KAAI,CAACF,IAAL,CAAUC,QAAV,CAAmBE,KAAnB,GAA2BL,UAA9E,EAA0F,EAA1F;AGNP,AHOA,ACPA,OEFD,AHOA,ACPA;AEIAoB,AHMH,ACNGA,MEAAA,AFAAA,UEAU,AFAA,CEACrB,AFAAA,EEAX,AFAA,CEAc,AFAA,YEAd,AFAA,EEA4B,AFAA,YEAM,AFAA;AEC9BiB,AFAAA,QEAAA,AFAAA,QEAQ,AFAA,CEACG,AFAAA,UEAT,AFAA,CEAoB,AFAA,ECH5B,GCGQ,AFAA;AECH,AFAA,ACFD,OCAA,AFAA,ICAKzB,IAAL,CAAUI,KAAV,CAAgB,SAAhB,EAA2B,0BAA3B,EAFJ,CAGI;ACGAsB,AFAAA,ACFA,MCEAA,AFAAA,UEAU,AFAA,CEACrB,AFAAA,EEAX,AFAA,CEAc,AFAA,SDKV,EGLJ,AFAA,EEA2B,AFAA,YEAM,AFAA;AEC7Bb,AHKJ,ACLIA,QEAAA,AFAAA,OEAO,AFAA,CEACC,AFAAA,GEAR,AFAA,CEAY,AFAA,YEAZ,AFAA;ADMJ,AEPA,WFOKmB,AEPAZ,IAAL,CFOA,AEPUI,CFOCS,IEPX,CFOA,AEPgB,CFOE9B,QEPlB,EAA2B,gBFOGC,eAAZ,CAA4BE,CEP9C,GFOA,EAAoD,cAApD;AGLI,AHOP,ACPO,ACDJ,QCCI,AFAA,GCDCc,ECCG,AFAA,CEACY,AFAAA,CCDT,CAAUR,GCCN,AFAA,CEAWS,AFAAA,CCDf,CAAgB,GCCZ,AFAA,CEAkB9B,AFAAA,QCDtB,EAA8B,gBCCIC,AFAAA,eEAZ,AFAA,CEA4BE,AFAAC,IEA9C,EAAoD,ADDxD,CDCI,EAAuD,eEAvD,EFAA;AECH,AFAA,ACDD,OCFA,AFAA,ICEKa,IAAL,CAAUsD,gBAAV,CAA2B,KAA3B,EAAkC,sCAAlC;ACEH,AFAA,ACAG,WAAKtD,IAAL,CAAUI,KAAV,CAAgB,OAAhB,EAAyB,0BAAzB;AACA,WAAKJ,IAAL,CAAUI,KAAV,CAAgB,WAAhB,EAA6B,sBAA7B;AACA,EF3CuBU,MAAM,CAACC,EE2CzBf,IAAL,CAAUI,KAAV,CAAgB,WAAhB,EAA6B,iCAA7B;AAEA6B,MAAAA,YAAY,GAAG,KAAKtC,GAAL,CAASC,QAAT,CAAkB;AAACC,EC7CPiB,AFAJA,MEAU,AFAJ,AC6CKjB,CC7CAkB,AF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","file":"phaser_endpoint.7e5a8d08.js","sourceRoot":"..","sourcesContent":["export const ActiveScene = {\r\n    AvailableScenes: {\r\n        Load: \"Load\",\r\n        Menu: \"Menu\",\r\n        Minimap: \"Minimap\",\r\n        GameOver: \"GameOver\"\r\n    }\r\n}","import { ActiveScene } from './ACTIVE_SCENE.js';\r\n\r\n// Load Scene\r\n/// Loads assets and Transfers over control to the Menu Scene\r\n\r\nexport class LoadScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: ActiveScene.AvailableScenes.Load\r\n        })\r\n    }\r\n\r\n    init(msg){\r\n        console.log(\"Load: \",msg);\r\n    }\r\n\r\n    preload(){\r\n\r\n        let loadBar = this.add.graphics({\r\n            fillStyle: {\r\n                color: 0xffffff\r\n            }\r\n        })\r\n\r\n        for(let i = 0; i< 100; i++)\r\n        {\r\n            this.load.spritesheet(\"grass_tiles\",\"../asset/spritesheet/grass_ss.png\" , {\r\n                frameHeight: 512,\r\n                frameWidth: 512\r\n            })\r\n\r\n            this.load.image('car', './asset/png/car/Car_1_Main_Positions/Car_Sprite.png');\r\n            this.load.image('menu_logo', './asset/menu/game-logo.png');\r\n            this.load.image('menu_bg', './asset/menu/menu-bg.png');\r\n\r\n            //this.load.image(\"tiles\", \"../dist/asset/spritesheet/roads2W.png\");\r\n            //this.load.tilemapTiledJSON(\"map\", \"../dist/asset/spritesheet/map_updated.json\");\r\n\r\n            //this.load.audio()\r\n        }\r\n\r\n        this.load.on(\"progress\", (percentage) => {\r\n                loadBar.fillRect(0, this.game.renderer.height / 2, this.game.renderer.width * percentage, 50);\r\n        })\r\n    }\r\n    \r\n\r\n    create(){\r\n        //this.scene.add(ActiveScene.AvailableScenes.Menu, MenuScene, false)\r\n        this.scene.start( ActiveScene.AvailableScenes.Menu, \"Load -> Menu\" );\r\n        \r\n    }\r\n}","import { ActiveScene } from './ACTIVE_SCENE.js';\r\n\r\n// Menu Scene\r\n/// Displays the Menu and shows options\r\n\r\nexport class MenuScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: ActiveScene.AvailableScenes.Menu\r\n        })\r\n    }\r\n\r\n    init(msg){\r\n        console.log(\"Menu: \",msg);\r\n    }\r\n\r\n    preload(){\r\n    }\r\n\r\n    create(){\r\n        // Height and Width for screen\r\n        const { width, height } = this.sys.game.config;\r\n\r\n        const logo = this.add.image(400, 150, 'menu_logo' ).setDepth(2);\r\n        logo.setScale(2);\r\n\r\n        let carmouse = this.add.sprite(250,310,'car');\r\n        carmouse.setScale(1/16).setOrigin(0).setVisible(false);\r\n\r\n        let playButton = //this.add.text(350,300, 'Play', { fontFamily: '\"Roboto Condensed\"' });\r\n        this.add\r\n        .text(350, 300 , \"Play\", {font: \"18px monospace\", color: \"white\"}).setShadow(5, 5, \"#5588EE\", 0, true, true);\r\n        playButton.setScale(3).setResolution(5);\r\n        playButton.setInteractive();\r\n        playButton.on(\"pointerover\", () => {\r\n            carmouse.setVisible(true);\r\n        })\r\n\r\n        playButton.on(\"pointerout\", () => {\r\n            carmouse.setVisible(false);\r\n        })\r\n\r\n        playButton.on(\"pointerup\", () => {\r\n            console.log(\"Start Game\");\r\n            this.scene.start( ActiveScene.AvailableScenes.Minimap, \"Menu -> Minimap\" );\r\n        })\r\n    }\r\n}","import { ActiveScene } from './ACTIVE_SCENE.js';\r\n\r\n\r\nlet controls;\r\nlet HighlightBar;\r\nexport class MinimapScene extends Phaser.Scene{\r\n    constructor(player = null, health = 100){\r\n        super({\r\n            key: ActiveScene.AvailableScenes.Minimap\r\n        })\r\n        this._player = player;\r\n        this._text = \"Health: 100%\";\r\n        this._health = health;\r\n        this._score = null;\r\n        this._socialscore = null;\r\n        this._lostGame = false;\r\n        this._phone = null;\r\n        this._data = [];\r\n        this._lastphoneEvent = null;\r\n        this._phoneEventTimer = null; \r\n        this._phonescreen_bg = null;\r\n        this._option1 = null;\r\n        this._option2 = null;\r\n        this._option3 = null;\r\n        this._F11 = null;\r\n    }\r\n\r\n    init(msg)\r\n    {\r\n        console.log(\"Minimap: \", msg );\r\n        this._text = \"Health: 100%\";\r\n        this._lastphoneEvent = this.time.now;\r\n        this._phoneEventTimer = 10;\r\n    }\r\n\r\n    preload()\r\n    {\r\n\r\n        this.load.image('menu_bg', './asset/menu/menu-bg.png');\r\n        //this.load.spritesheet('base_tiles_ss', './asset/spritesheet/tiles_spritesheet.png');\r\n        //this.load.atlas('base_map', './asset/spritesheet/tiles_spritesheet.png', 'asset/spritesheet/tiles_spritesheet.json');\r\n\r\n        this.load.image(\"roads2W\", \"./asset/spritesheet/roads2W.png\");\r\n        this.load.image(\"RPGTileset\", \"./asset/spritesheet/TilesetPyxel.png\");\r\n        this.load.tilemapTiledJSON(\"map\", \"./asset/spritesheet/map_updated.json\");\r\n\r\n        this.load.image(\"phone\", \"./asset/phone/mobile.png\");\r\n        this.load.image(\"screen_bg\", \"./asset/phone/bg.jpg\");\r\n        this.load.image(\"screen_bg\", \"./asset/phone/speech-bubble.png\");\r\n\r\n        HighlightBar = this.add.graphics({fillStyle: {color: 0xff4f1f}});\r\n    }\r\n\r\n    create()\r\n    {   \r\n        // Screen Data\r\n        const { width, height } = this.sys.game.config;\r\n\r\n        // Map Setup\r\n        const map = this.make.tilemap({ key: \"map\" });\r\n        const tileset = map.addTilesetImage(\"roads2W\", \"roads2W\");\r\n        const tileset2 = map.addTilesetImage(\"RPG TileSet\", \"RPGTileset\");\r\n\r\n        // Map rendered based on Layers \r\n        const baseLayer = map.createDynamicLayer(\"Map\", tileset, 0, 0).setScale(3);\r\n        const collisionLayer = map.createDynamicLayer(\"Trees\", tileset2, 0, 0).setScale(3);\r\n        const layer3 = map.createDynamicLayer(\"Bridge\", tileset2, 0, 0).setScale(3);\r\n        collisionLayer.setCollisionByProperty({ canCollide: true });\r\n\r\n        this.matter.world.convertTilemapLayer(collisionLayer);\r\n    \r\n\r\n        //collisionLayer.setDepth(2);\r\n        this._player = this.matter.add.image(450,150,'car').setScale(1/20);\r\n        \r\n        //this._F11 = this.input.keyboard.addKey(this.Keyboard.F11);  //Fix\r\n        this._score = this.add.text(16, 16, this._text, {\r\n                font: \"18px monospace\",\r\n                fill: \"#ffffff\",\r\n                padding: { x: 20, y: 10 },\r\n                backgroundColor: \"#000000\"\r\n            })\r\n            .setScrollFactor(0);\r\n\r\n        let socialscore = this.add.text(16, 60, \"Social Score: 10/10\", {\r\n                font: \"18px monospace\",\r\n                fill: \"#ffffff\",\r\n                padding: { x: 20, y: 10 },\r\n                backgroundColor: \"#000000\"\r\n            })\r\n            .setScrollFactor(0);\r\n        \r\n        // Camera View Settings\r\n        const camera = this.cameras.main;\r\n        camera.startFollow(this._player);\r\n        camera.setBounds(0, 0, 2300, 1530);\r\n\r\n\r\n        // DEBUG Rules\r\n        this.matter.world.createDebugGraphic();\r\n        this.matter.world.drawDebug = false;\r\n        this.input.keyboard.on(\"keydown_D\", event => {\r\n            this.matter.world.drawDebug = !this.matter.world.drawDebug;\r\n            this.matter.world.debugGraphic.clear();\r\n        });\r\n\r\n        // Update Damage taken by player \r\n        let healthvalue = this._health;\r\n        this.matter.world.on('collisionstart', function (event, bodyA, bodyB) {\r\n            healthvalue = healthvalue - Math.floor(Math.random()*(8)+1);\r\n            if(healthvalue > 0)\r\n            {\r\n                this.scene._text = \"Health: \" + healthvalue + \"%\";\r\n                this.scene._score.setText(this.scene._text);    \r\n            } \r\n            else\r\n            {\r\n                // Game Over: Send to new Game Over scene\r\n                this.scene.endGame();\r\n            }\r\n        });\r\n\r\n\r\n        // Phone Graphic\r\n        /// We create a Container for the Phone \r\n        this._phone = this.add.image( width*0.85 , height*0.8 ,\"phone\").setScale(0.5).setDepth(10).setScrollFactor(0);\r\n        this._phonescreen_bg = this.add.image(width*0.85,height*0.85, 'screen_bg').setScale(0.9).setDepth(8).setScrollFactor(0);\r\n        this._question = this.add.text(width*0.75,height*0.6, \"Wanna Hangout?\", {\r\n            font: \"15px monospace\",\r\n            fill: \"#ffffff\",padding: { x: 15, y: 10 },backgroundColor: \"#000000\"}).setDepth(9).setScrollFactor(0).setResolution(10);\r\n        this._option1 = this.add.text(width*0.78,height*0.7, 'Bye').setFontSize(15).setDepth(11).setScrollFactor(0);\r\n        this._option2 = this.add.text(width*0.78,height*0.8, 'I Dont Care').setFontSize(15).setDepth(11).setScrollFactor(0);\r\n        this._option3 = this.add.text(width*0.78,height*0.9, 'Maybe').setFontSize(15).setDepth(11).setScrollFactor(0);\r\n\r\n        \r\n        let option1_bar = HighlightBar.fillRect(width*0.78,height*0.69, 300 , 30).setAlpha(0).setDepth(10);\r\n        let option2_bar = HighlightBar.fillRect(width*0.78,height*0.79, 300 , 30).setAlpha(0).setDepth(10);\r\n        let option3_bar = HighlightBar.fillRect(width*0.78,height*0.89, 300 , 30).setAlpha(0).setDepth(10);\r\n            \r\n        this._lastphoneEvent = this.time.now;\r\n\r\n        this._phone.setAlpha(0);\r\n        this._phonescreen_bg.setAlpha(0);\r\n        this._question.setAlpha(0);\r\n        this._option1.setAlpha(0);\r\n        this._option2.setAlpha(0);\r\n        this._option3.setAlpha(0);\r\n          \r\n\r\n        //Interactive Setup\r\n        this.phoneHighlight(this._option1, option1_bar);\r\n        this.phoneHighlight(this._option2, option2_bar);\r\n        this.phoneHighlight(this._option3, option3_bar);\r\n\r\n\r\n        \r\n        //let timedEvent = this.time.now;\r\n        //console.log(timedEvent);\r\n\r\n        \r\n        \r\n        //delayedCall(3000, this.onPhoneSubmit, [], this);\r\n\r\n\r\n    }\r\n\r\n    update(time, delta)\r\n    {\r\n        //controls.update(delta);\r\n        let cursors = this.input.keyboard.createCursorKeys();\r\n        const { width, height } = this.sys.game.config;\r\n\r\n        this._player.setVelocity(0);\r\n        //this._player.velocity.normalize().scale(playerSpeed);\r\n\r\n        this._player.setFrictionAir(0.15);\r\n        this._player.setMass(50);\r\n        this._player.setFixedRotation();\r\n\r\n        // Forward Motion \r\n        if (cursors.up.isDown)\r\n        {\r\n            this._player.thrust(0.5);\r\n        }\r\n        else if (cursors.down.isDown)\r\n        {\r\n            this._player.thrust(-0.5);\r\n        }\r\n\r\n\r\n        // Turning Motion\r\n        if (cursors.left.isDown)\r\n        {\r\n            this._player.setAngularVelocity(-0.03);\r\n        }\r\n        else if (cursors.right.isDown)\r\n        {\r\n            this._player.setAngularVelocity(0.03);\r\n        }        \r\n        if(this._F11.isDown)\r\n        {\r\n            /**\r\n             * this._map.height = window.screen.height;\r\n             * this._map.width = window.screen.width;\r\n             */\r\n        }\r\n        // Timer Setup for Phone Events\r\n        if(this.time.now - (this._lastphoneEvent + this._phoneEventTimer*1000) > 0)\r\n        {\r\n            this.onPhoneSubmit();\r\n        }\r\n        else\r\n        {\r\n            //Nothing\r\n        }\r\n\r\n    }\r\n\r\n    endGame() {\r\n        this.scene.start( ActiveScene.AvailableScenes.GameOver, \"Minimap -> Game Over\" );\r\n    }\r\n\r\n    onPhoneSubmit ()\r\n    {\r\n        console.log(\"Phone Event Triggerrred\");\r\n\r\n        this._lastphoneEvent = this.time.now;\r\n        if(this._phoneEventTimer - 1 > 5)\r\n        {\r\n            // Fade In Phone Overlay\r\n            this.tweens.add({targets: this._phone,alpha: 1,duration: 2000,ease: 'Power2'}, this);\r\n            this.tweens.add({targets: this._phonescreen_bg,alpha: 1,duration: 2000,ease: 'Power2'}, this);\r\n            this.tweens.add({targets: this._question,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n            this.tweens.add({targets: this._option1,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n            this.tweens.add({targets: this._option2,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n            this.tweens.add({targets: this._option3,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n\r\n            this._phoneEventTimer -= 1;\r\n        }\r\n        else \r\n        {\r\n            //Do Nothing\r\n            // Fade In Phone Overlay\r\n            this.tweens.add({targets: this._phone,alpha: 1,duration: 1000,ease: 'Power2'}, this);\r\n            this.tweens.add({targets: this._phonescreen_bg,alpha: 1,duration: 1000,ease: 'Power2'}, this);\r\n            this.tweens.add({targets: this._question,alpha: 1,duration: 1000,ease: 'Power2',loop: -1}, this);\r\n            this.tweens.add({targets: this._option1,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n            this.tweens.add({targets: this._option2,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n            this.tweens.add({targets: this._option3,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n            console.log(\"Fastest Speed\");\r\n        }\r\n    }\r\n\r\n    phoneHighlight(option, highlight) \r\n    {\r\n        // option.setScale(3).setResolution(5);\r\n        option.setInteractive();\r\n        option.on(\"pointerover\", () => {\r\n            //highlight.setAlpha(1);\r\n            option.setTint(0xff00ff, 0xffff00, 0x0000ff, 0xff0000);\r\n        })\r\n\r\n        option.on(\"pointerout\", () => {\r\n            option.setTint(\"#ffffff\", 0);\r\n        })\r\n\r\n        option.on(\"pointerup\", () => {\r\n            console.log(\"Submission\", option);\r\n        })\r\n    }\r\n\r\n}","import { ActiveScene } from './ACTIVE_SCENE.js';\r\n\r\n// Menu Scene\r\n/// Displays the Menu and shows options\r\n\r\nexport class GameOverScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: ActiveScene.AvailableScenes.GameOver\r\n        })\r\n    }\r\n\r\n    init(msg){\r\n        console.log(\"GameOver: \",msg);\r\n    }\r\n\r\n    preload(){\r\n    }\r\n\r\n    create(){\r\n        // Height and Width for screen\r\n        const { width, height } = this.sys.game.config;\r\n\r\n        const logo = this.add.image(400, 150, 'menu_logo' ).setDepth(2);\r\n        logo.setScale(2);\r\n\r\n        let carmouse = this.add.sprite(300,300,'car');\r\n        carmouse.setScale(1/16).setOrigin(0).setVisible(false);\r\n\r\n        let playButton = //this.add.text(350,300, 'Play', { fontFamily: '\"Roboto Condensed\"' });\r\n        this.add\r\n        .text(220, 300 , \"Play Again!\", {font: \"18px monospace\", color: \"white\"}).setShadow(5, 5, \"#5588EE\", 0, true, true);\r\n        playButton.setScale(3).setResolution(5);\r\n        playButton.setInteractive();\r\n        playButton.on(\"pointerover\", () => {\r\n            carmouse.setVisible(true);\r\n        })\r\n\r\n        playButton.on(\"pointerout\", () => {\r\n            carmouse.setVisible(false);\r\n        })\r\n\r\n        playButton.on(\"pointerup\", () => {\r\n            console.log(\"Start Game\");\r\n            this.scene.start( ActiveScene.AvailableScenes.Menu, \"GameOver -> Menu\" );\r\n        })\r\n    }\r\n}","import { LoadScene } from './scenes/LoadScene';\r\nimport { MenuScene } from './scenes/MenuScene';\r\nimport { MinimapScene } from './scenes/MinimapScene';\r\nimport { GameOverScene } from './scenes/GameOverScene';\r\n\r\nconst config = {\r\n    type: Phaser.AUTO, // Which renderer to use\r\n    width: 800, // Canvas width in pixels\r\n    height: 600, // Canvas height in pixels\r\n    backgroundColor: '#f09020',\r\n    parent: \"game-container\",\r\n    scene: [\r\n      LoadScene, \r\n      MenuScene,\r\n      MinimapScene,\r\n      GameOverScene\r\n    ],\r\n    render:{\r\n      pixelArt: true\r\n    },\r\n    physics: {\r\n      default: \"matter\",\r\n      matter: {\r\n        gravity: { x: 0, y: 0 } // 2D Game does not need Gravity\r\n      }\r\n    }\r\n  };\r\n  \r\n  const game = new Phaser.Game(config);\r\n  \r\n  // function preload() {\r\n  //   // Runs once, loads up assets like images and audio\r\n  //   this.load.image(\"grass\", \"./asset/png/tile/Background_Tiles/Grass_Tile.png\");\r\n  //   //this.load.image(\"grass-tiles\", \"../spritesheet/grass_ss.png\");\r\n  //   this.load.tilemap(\"grass-tiles\", \"../spritesheet/grass_ss.png\",32,32);\r\n\r\n  //   this.load.image('car', './assets/png/car/Car_1_Main_Positions/Car_1_01.png');\r\n  //   this.load.tilemapTiledJSON('map', './spritesheet/grass_ss.json');\r\n  //   this.load.image('tiles1', 'assets/tilemaps/tiles/super-mario.png');\r\n  // }\r\n  \r\n  // function create() {\r\n  //   // Runs once, after all assets in preload are loaded\r\n  //   const level = [\r\n  //       [  0,   2,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ]\r\n  //     ];\r\n\r\n  //     map = game.add.tilemap('map');\r\n      \r\n\r\n  //     var background = this.add.sprite(0, 0, \"grass\", \"./asset/png/tile/Grass_Tile (2).png\");\r\n  //     const map = this.make.tilemap({ data: level, tileWidth: 50, tileHeight: 50 });\r\n  //     const tiles = map.addTilesetImage(\"grass-tiles\");\r\n  //     const layer = map.createStaticLayer(0, tiles, 0, 0);\r\n  //     //background.setScale(3, 2.4);\r\n  // }\r\n  \r\n  // function update(time, delta) {\r\n  //   // Runs once per frame for the duration of the scene\r\n  // }"]}