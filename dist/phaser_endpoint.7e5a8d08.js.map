{"version":3,"sources":["scenes/ACTIVE_SCENE.js","scenes/LoadScene.js","scenes/MenuScene.js","scenes/MinimapScene.js","scenes/GameOverScene.js","phaser_endpoint.js"],"names":["ActiveScene","AvailableScenes","Load","Menu","Minimap","GameOver","LoadScene","key","msg","console","log","loadBar","add","graphics","fillStyle","color","i","load","spritesheet","frameHeight","frameWidth","image","on","percentage","fillRect","game","renderer","height","width","scene","start","Phaser","Scene","MenuScene","sys","config","logo","setDepth","setScale","carmouse","sprite","setOrigin","setVisible","playButton","text","font","setShadow","setResolution","setInteractive","controls","HighlightBar","MinimapScene","player","health","_player","_text","_health","_score","_socialscore","_socialscorevalue","_lostGame","_phone","_data","_lastphoneEvent","_phoneEventTimer","_phonescreen_bg","_option1","_option2","_option3","_F11","_angularVel","_thrust","_solved","time","now","tilemapTiledJSON","map","make","tilemap","tileset","addTilesetImage","tileset2","baseLayer","createDynamicLayer","collisionLayer","layer3","setCollisionByProperty","canCollide","matter","world","convertTilemapLayer","thrust","fill","padding","x","y","backgroundColor","setScrollFactor","camera","cameras","main","startFollow","setBounds","healthvalue","event","bodyA","bodyB","Math","floor","random","setText","endGame","_question","setFontSize","option1_bar","setAlpha","option2_bar","option3_bar","phoneHighlight","delta","cursors","input","keyboard","addKeys","up","Input","Keyboard","KeyCodes","W","down","S","left","A","right","D","setFrictionAir","setMass","setFixedRotation","isDown","setAngularVelocity","onPhoneSubmit","q","o1","o2","o3","correct_o","_correct_o","tweens","targets","alpha","duration","ease","loop","option","highlight","GameOverScene","type","AUTO","parent","render","pixelArt","physics","default","gravity","Game"],"mappings":";;AKAA;;AACA;;AACA,ALFO,IAAMA,WAAW,GAAG;AACvBC,AIDJ,AHAA,ACAA,ACAA,EHCIA,eAAe,EAAE;AKErB,ALDQC,IAAAA,IAAI,EAAE,MADO;AAEbC,IAAAA,IAAI,EAAE,MAFO;AKIrB,ALDQC,IKCF+B,ALDE/B,MKCI,CLDG,EKCA,ALDE,SAHI;AKKjBwJ,ALDIvJ,EKCJuJ,ELDIvJ,EKCA,EAAE0B,ILDM,EKCA,ALDE,CKCD8H,IADF;AACQ,ALLF;AKMjBjI,ALPuB,CAApB,CKOHA,KAAK,EAAE,GAFI;AAEC;AACZD,EAAAA,MAAM,EAAE,GAHG;AAGE;AACbqE,EAAAA,eAAe,EAAE,SAJN;AAKX8D,EAAAA,MAAM,EAAE,gBALG;AAMXjI,EAAAA,KAAK,EAAE,CACLvB,oBADK,EAEL2B,oBAFK,EAGLkB,0BAHK,EAILwG,4BAJK,CANI;AAYXI,EAAAA,MAAM,EAAC;AACLC,IAAAA,QAAQ,EAAE;AADL,GAZI;AAeXC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,QADF;AAEP1E,IAAAA,MAAM,EAAE;AACN2E,MAAAA,OAAO,EAAE;AAAErE,ADrBnB,AHAA,ACAA,ACCA,IAAI7C,IEoBe6C,CAAC,EAAE,CAAL,AFpBjB;AEoByBC,ADpBzB,AHAA,ACAA,ACCA,IAAI7C,IEmBqB6C,CAAC,EAAE,KFnB5B;AEmBiB,IDlBJ4D,AHAArJ,ACAA2B,GGiBC,CACkB;IFlBnBkB;AEiBC;AAFD;AAfE,CAAf;AAuBE,ADtBE,AHAA,ACAA,IGsBI1B,IAAI,GAAG,IAAIM,MAAM,CAACqI,CJtBT,ACAA,GGsBF,CAAgBjI,ADtBd,MCsBF,CAAb,EAEA;AACA,ADzBe,AHAA,ACAA,ACAb,0BAAwC;AE0B1C,AF1B0C;AE2B1C,AD3Be,AHAA,ACAA,kFDCH,ACAA,IEAA;AC2BZ,AD1BU5B,AHAAA,ACAAA,ACFgC,MCEhCA,AHAAA,ACAAA,ECFI6C,CCED,AHAA,ACAA,EEAEpD,AHAAA,ACAAA,GCF2B,uBCEfC,AHAAA,ACAAA,eEAZ,AHAA,ACAA,CEA4BI,AHAAH,ACAAC,gCCFpB,IAAmB;AE8B1C,AD7BY,AHAA,ACAA,ACD8B,KCA3B,AHAA,ACAA,GCAckD,MAAa,uEAAJ,GAAI;AE+B1C,AD3BG,AHAA,ACAA;AG4BH,AFhC0C;AEiC1C;AAEA,AFlCM,sFAAM;AEmCZ,AFlCU9C,MAAAA,GAAG,EAAEP,cCIRQ,AHAAA,ACAAA,KEAI,AHAA,ACAA,OCJgBP,eAAZ,CAA4BG;AEmC3C,AD9BMK,AHAAA,ACAAA,ACNM,KAAN,CCMAA,AHAAA,ACAAA,OEAO,AHAA,ACAA,CEACC,AHAAA,ACAAA,GEAR,AHAA,ACAA,CEAY,AHAA,ACAA,QDAZ,ACAA,EDAqBF,ACAEA,EEAvB,CHAA,ACAA,CEAyBA,GAAzB;AC+BN,AD9BG,AHAA,ACAA,ACJG,UAAK8C,OAAL,GAAeF,MAAf;AEmCN,AFlCM,UAAKG,KAAL,GAAa,cAAb;AEmCN,AFlCM,UAAKC,OAAL,GAAeH,MAAf;AEmCN,AFlCM,UAAKI,MAAL,GAAc,IAAd,OCGK,AHAA,ACAA,CECR,AFAA;AG+BH,AJhCW,AEFL,UAAKC,YAAL,GAAoB,IAApB;AEmCN,AFlCM,UAAKC,iBAAL,GAAyB,EAAzB;AEmCN,AJhCM,AEFA,UFEIhD,AEFCiD,OFEM,EEFX,CFEc,EEFG,GFEEhD,EEFnB,CFEc,CGCV,AHDmBC,ACCnB,QDDU,CAAkB;AIiCtC,ADhCU,AHAAC,ACAA,ACFJ,QFEIA,EEFC+C,MAAL,CFEa,EAAE,AEFD,IAAd;AEmCN,AJhCc9C,AEFR,UFEQA,AEFH+C,KFEQ,AEFb,EFEe,CEFF,EAAb;AEmCN,ADjCM,AHDe,ACCf,ACDA,UAAKC,eAAL,GAAuB,IAAvB;AEmCN,ADnCU,AHD4B,ACC5B,ACCJ,OFFc,CAAd,EEEKC,gBAAL,GAAwB,IAAxB,CCC0B,AFAA,KEAK9B,AFAAA,GEAL,AFAA,CEAST,AFAAA,IEAT,AFAA,CEAcU,AFAAA,MEFpC,AFAA;AGoCV,ADpCU,AFAA,ACEJ,UCAQP,AFAAA,ACAHqC,KCFD,AFAA,UCEJ,GAAuB,IAAvB,QCAQrC,AFAAA,KEFJ,AFAA;AGsCV,ADtCU,AHKJ,ACLI,ACGJ,UCDeD,AFAAA,ACCVuC,CFED,IAAIlD,CGLJ,AHKK,ACLL,ECGJ,CFEY,CAAZ,CEFgB,CFEDA,CAAC,EEFhB,CFEkB,GAAlB,EAAuBA,CAAC,EAAxB,EACA,KGJeW,AFAAA,MEFX,AFAA;AGyCV,ADrCM,AHGI,ACHJ,ACAA,UCAMS,AFAAA,ACAD+B,GFGIlD,CGHC,AFAA,GEAG,AHGT,ACHS,CDGCC,AEHd,GAAgB,CCAEN,AFAAA,GEAL,AFAA,ACAb,CCAsBS,AFAAA,GDGlB,CAAsB,CGHb,AFAA,CEAe,AFAA,GEAf,AFAA,EEAoB,AFAA,GEApB,AFAA,EEAyB,AFAA,CDGlC,EAAoC,QGH3B,AFAA,EEAuCgB,AFAAA,QEAvC,AFAA,CEAgD,AFAA,CEAhD,AFAA,CEAb,AFAA,cDGI,EAA0E;AImCpF,ADrCMD,AHGQjB,ACHRiB,ACAA,MCAAA,AFAAA,IEAI,AHGIjB,ACHJ,ACACiD,CCAA9B,AFAAA,OCAL,CCAA,AFAA,CEAc,AFAA,CEAd,AHGmB,ACHnB,ACAgB,EFGK,EEHrB,CFE8E;AIoCpF,ADpCM,AHEQlB,ACFR,ACDA,UCCImB,AHEInB,ACFJmB,ACDC8B,IAAL,GAAY,CCCA,AFAA,EDEM,CGFH,AFAA,ACDf,CFGoB,IGFAzD,AFAAA,GEAL,AFAA,CEAS4B,AFAAA,MEAT,AFAA,CEAgB,AFAA,GEAhB,AFAA,EEAoB,AFAA,GEApB,AFAA,EEAwB,AFAA,KEAxB,AFAA,CEAf,AFAA;AGqCN,ADpCMD,AHD8E,ACC9EA,ACDA,MCCAA,AFAAA,GDDI,CEAC+B,ICCG,AFAA,CEAChC,AFAAA,MCDT,ECCA,AFAA,CEAkB,AFAA,ACDC,ICCC,AFAA,ACDpB,ECCA,AFAA,EEAwBG,AFAAA,SEAxB,AFAA,CEAkC,AFAA,CEAlC,AFAA,EEAqCC,AFAAA,UEArC,AFAA,CEAgD,AFAA,KEAhD,AFAA;AGqCN,ADnCM,AHEI,ACFJ,ACFA,UCEIC,AFAAA,ACFC4B,GFIItD,IAAL,AEJJ,CFIcI,EGFA,AFAA,ACFC,GCEE,AHEb,ACFa,CDEG,AEJpB,KFII,EAAuB,qDAAvB;AIkCV,ADnCM,AHEI,ACFJ,ACFA,UAAKmD,CCEA5D,AFAAA,EDEIK,CGFT,AFAA,CECC2B,AFAAA,EDCG,AEJJ,CFIcvB,CGFd,AFAA,CECM,AFAA,ACHS,CAAf,ECEA,AHEI,ACFJ,CDEoB,CGDT,AFAA,GEDX,AFAA,EECiB,AFAA,KDCb,CCFJ,CDEiC,CCDR,KEDzB,EACgC,oBHC5B;AImCV,ADpCuCwB,AHE7B,ACFsBA,ACzBU,QCyBHA,AFAPA,IEAW,AFAP,CDErB5B,CGF8B,AFAP,GDE5B,CAAUI,KAAV,CAAgB,MGFY,AFAP,GDErB,EAA2B,0BAA3B,EARJ,CAUI;AIiCV,ADrC+DN,AHKrD,ACL8CA,ACFrD,QCE4DA,AFAPA,KEAY,AFAP,EEAS,AFAP;AGsC/D,ADtCsC,AHO5B,ACPqB,OEDzB,AFAA,EEC0E+B,AFAPA,SEDnE,AFAA,CECoF,AFAP,CED7E,AFAA,EECuF,AFAP,CEDhF,AFAA,EEC0F,AFAP,SEDnF,AFAA,EECqG,AFAP,CED9F,AFAA,EECwG,AFAP,IEDjG,AFAA,EEC8G,AFAP,IEDvG,AFAA,CEDA,AFAA;AEGAH,AHOC,ACPDA,MEAAA,AFAAA,UEAU,AFAA,CEACL,AFAAA,QEAX,AFAA,CEAoB,AFAA,CEApB,AFAA,EEAuBS,AFAAA,aEAvB,AFAA,CEAqC,AFAA,CEArC,AFAA;AECAJ,AFAAA,MEAAA,AFAAA,UEAU,AFAA,CEACK,AFAAA,cEAX,AFAA;AECAL,AHOA,ACPAA,MEAAA,AFAAA,KDOK1B,IAAL,CGPU,AHOAK,ACPA,CEACA,AFAAA,CDOX,CGPA,AHOa,ACPb,CEAc,AFAA,KCHbd,IFUD,CETJ,CFS6B,EGPzB,AFAA,EEA6B,AFAA,MDOHe,MGPS,AFAA,IDOV,EAAgB;AGNrCgB,AHOI5B,ACPJ4B,ACFJ9B,MAAAA,ECEI8B,AHOI5B,ACPJ4B,KCFG,CAAC7B,CFSO,CGPH,AHOIc,ACPJ,CEACkB,AFAAA,ACFb,CAAY,MFSJ,CAAiB,CAAjB,CGPJ,AFAA,CEAoB,AHOI,ACPJ,CCFxB,EAAyBlC,CCErB,AFAA,CDO4B,CAACiB,AETjC,IFS4B,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,CAAhD,EAAmD,KAAI,CAACF,IAAL,CAAUC,QAAV,CAAmBE,KAAnB,GAA2BL,UAA9E,EAA0F,EAA1F;AGNP,AHOA,ACPA,ACFD,OCAA,AHOA,ACPA,ICAKgC,KAAL,GAAa,cAAb;ACIAZ,AHMH,ACNGA,ACHA,MCGAA,AFAAA,KCHKoB,KCGK,AFAA,CEACzC,AFAAA,EEAX,AFAA,CEAc,AFAA,MCHd,GAAuB,GCGvB,AFAA,EEA4B,AFAA,ACHAmD,IAAL,CAAUC,GAAjC,ICGkC,AFAA;AEC9BnC,AFAAA,ACHJ,QCGIA,AFAAA,GCHCyB,KCGO,AFAA,CEACtB,AFAAA,UEAT,AFAA,ACHJ,CCGwB,AFAA,ECHA,EAAxB,CCGI,AFAA;AECH,AFAA,ACHJ,OCCG,AFAA;AEIAC,AFAAA,MEAAA,AFAAA,UEAU,AFAA,CEACrB,AFAAA,EEAX,AFAA,CEAc,AFAA,SDKV,EGLJ,AFAA,EEA2B,AFAA,YEAM,AFAA;AEC7Bb,AHKJ,ACLIA,QEAAA,AFAAA,OEAO,AFAA,CEACC,AFAAA,GEAR,AFAA,CEAY,AFAA,YEAZ,AFAA;ADMJ,WAAKmB,KAAL,CAAWC,KAAX,CAAkB9B,OETtB,mBFSkCC,eAAZ,CAA4BE,IAA9C,EAAoD,cAApD;AGLI,AHOP,ACPO,ACFJ,QCEI,AFAA,GCFCc,ECEG,AFAA,CEACY,AFAAA,CCFT,CAAUR,GCEN,AFAA,CEAWS,AFAAA,CCFf,CAAgB,GCEZ,AFAA,CEAkB9B,AFAAA,KCFtB,EAA2B,mBCEOC,AFAAA,OCFlC,EAFJ,CAGI,KCCsB,AFAA,CEA4BE,AFAAC,IEA9C,EAAoD,CFApD,EAAuD,eEAvD,EFAA;AECH,AFAA,ACDD,OCFA,AFAA;AEIH,AFAA;ACAG,WAAKa,IAAL,CAAUI,KAAV,CAAgB,SAAhB,EAA2B,iCAA3B;AACA,EF1CuBU,MAAM,CAACC,EE0CzBf,IAAL,CAAUI,KAAV,CAAgB,YAAhB,EAA8B,sCAA9B;AACA,WAAKJ,IAAL,CAAU0D,gBAAV,CAA2B,KAA3B,EAAkC,sCAAlC;AAEA,EC7C2B5C,AFAJA,MEAU,AFAJ,CEAKC,AFAJA,EC6CzBf,IAAL,CAAUI,KAAV,CAAgB,OAAhB,EAAyB,0BAAzB;AACA,WAAKJ,IAAL,CAAUI,KAAV,CAAgB,WAAhB,EAA6B,sBA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","file":"phaser_endpoint.7e5a8d08.js","sourceRoot":"..","sourcesContent":["export const ActiveScene = {\r\n    AvailableScenes: {\r\n        Load: \"Load\",\r\n        Menu: \"Menu\",\r\n        Minimap: \"Minimap\",\r\n        GameOver: \"GameOver\"\r\n    }\r\n}","import { ActiveScene } from './ACTIVE_SCENE.js';\r\n\r\n// Load Scene\r\n/// Loads assets and Transfers over control to the Menu Scene\r\n\r\nexport class LoadScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: ActiveScene.AvailableScenes.Load\r\n        })\r\n    }\r\n\r\n    init(msg){\r\n        console.log(\"Load: \",msg);\r\n    }\r\n\r\n    preload(){\r\n\r\n        let loadBar = this.add.graphics({\r\n            fillStyle: {\r\n                color: 0xffffff\r\n            }\r\n        })\r\n\r\n        for(let i = 0; i< 100; i++)\r\n        {\r\n            this.load.spritesheet(\"grass_tiles\",\"../asset/spritesheet/grass_ss.png\" , {\r\n                frameHeight: 512,\r\n                frameWidth: 512\r\n            })\r\n\r\n            this.load.image('car', './asset/png/car/Car_1_Main_Positions/Car_Sprite.png');\r\n            this.load.image('menu_logo', './asset/menu/game-logo.png');\r\n            this.load.image('menu_bg', './asset/menu/menu-bg.png');\r\n\r\n            //this.load.image(\"tiles\", \"../dist/asset/spritesheet/roads2W.png\");\r\n            //this.load.tilemapTiledJSON(\"map\", \"../dist/asset/spritesheet/map_updated.json\");\r\n\r\n            //this.load.audio()\r\n        }\r\n\r\n        this.load.on(\"progress\", (percentage) => {\r\n                loadBar.fillRect(0, this.game.renderer.height / 2, this.game.renderer.width * percentage, 50);\r\n        })\r\n    }\r\n    \r\n\r\n    create(){\r\n        //this.scene.add(ActiveScene.AvailableScenes.Menu, MenuScene, false)\r\n        this.scene.start( ActiveScene.AvailableScenes.Menu, \"Load -> Menu\" );\r\n        \r\n    }\r\n}","import { ActiveScene } from './ACTIVE_SCENE.js';\r\n\r\n// Menu Scene\r\n/// Displays the Menu and shows options\r\n\r\nexport class MenuScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: ActiveScene.AvailableScenes.Menu\r\n        })\r\n    }\r\n\r\n    init(msg){\r\n        console.log(\"Menu: \" , msg);\r\n    }\r\n\r\n    preload(){\r\n    }\r\n\r\n    create(){\r\n        // Height and Width for screen\r\n        const { width, height } = this.sys.game.config;\r\n\r\n        const logo = this.add.image(400, 150, 'menu_logo' ).setDepth(2);\r\n        logo.setScale(2);\r\n\r\n        let carmouse = this.add.sprite(250,310,'car');\r\n        carmouse.setScale(1/16).setOrigin(0).setVisible(false);\r\n\r\n        let playButton = //this.add.text(350,300, 'Play', { fontFamily: '\"Roboto Condensed\"' });\r\n        this.add\r\n        .text(350, 300 , \"Play\", {font: \"18px monospace\", color: \"white\"}).setShadow(5, 5, \"#5588EE\", 0, true, true);\r\n        playButton.setScale(3).setResolution(5);\r\n        playButton.setInteractive();\r\n        playButton.on(\"pointerover\", () => {\r\n            carmouse.setVisible(true);\r\n        })\r\n\r\n        playButton.on(\"pointerout\", () => {\r\n            carmouse.setVisible(false);\r\n        })\r\n\r\n        playButton.on(\"pointerup\", () => {\r\n            console.log(\"Start Game\");\r\n            this.scene.start( ActiveScene.AvailableScenes.Minimap, \"Menu -> Minimap\" );\r\n        })\r\n    }\r\n}","import { ActiveScene } from './ACTIVE_SCENE.js';\r\n\r\n\r\nlet controls;\r\nlet HighlightBar;\r\nexport class MinimapScene extends Phaser.Scene{\r\n    constructor(player = null, health = 100){\r\n        super({\r\n            key: ActiveScene.AvailableScenes.Minimap\r\n        })\r\n        this._player = player;\r\n        this._text = \"Health: 100%\";\r\n        this._health = health;\r\n        this._score = null;\r\n        this._socialscore = null;\r\n        this._socialscorevalue = 10;\r\n        this._lostGame = false;\r\n        this._phone = null;\r\n        this._data = [];\r\n        this._lastphoneEvent = null;\r\n        this._phoneEventTimer = null; \r\n        this._phonescreen_bg = null;\r\n        this._option1 = null;\r\n        this._option2 = null;\r\n        this._option3 = null;\r\n        this._F11 = null;\r\n        this._angularVel = 0.03;\r\n        this._thrust = 0.25;\r\n        this._solved = 0;\r\n    }\r\n\r\n    init(msg)\r\n    {\r\n        console.log(\"Minimap: \", msg );\r\n        this._text = \"Health: 100%\";\r\n        this._lastphoneEvent = this.time.now;\r\n        this._phoneEventTimer = 10;\r\n    }\r\n\r\n    preload()\r\n    {\r\n\r\n        this.load.image('menu_bg', './asset/menu/menu-bg.png');\r\n        //this.load.spritesheet('base_tiles_ss', './asset/spritesheet/tiles_spritesheet.png');\r\n        //this.load.atlas('base_map', './asset/spritesheet/tiles_spritesheet.png', 'asset/spritesheet/tiles_spritesheet.json');\r\n\r\n        this.load.image(\"roads2W\", \"./asset/spritesheet/roads2W.png\");\r\n        this.load.image(\"RPGTileset\", \"./asset/spritesheet/TilesetPyxel.png\");\r\n        this.load.tilemapTiledJSON(\"map\", \"./asset/spritesheet/map_updated.json\");\r\n\r\n        this.load.image(\"phone\", \"./asset/phone/mobile.png\");\r\n        this.load.image(\"screen_bg\", \"./asset/phone/bg.jpg\");\r\n        this.load.image(\"screen_bg\", \"./asset/phone/speech-bubble.png\");\r\n\r\n        HighlightBar = this.add.graphics({fillStyle: {color: 0xff4f1f}});\r\n    }\r\n\r\n    create()\r\n    {   \r\n        // Screen Data\r\n        const { width, height } = this.sys.game.config;\r\n\r\n        // Map Setup\r\n        const map = this.make.tilemap({ key: \"map\" });\r\n        const tileset = map.addTilesetImage(\"roads2W\", \"roads2W\");\r\n        const tileset2 = map.addTilesetImage(\"RPG TileSet\", \"RPGTileset\");\r\n\r\n        // Map rendered based on Layers \r\n        const baseLayer = map.createDynamicLayer(\"Map\", tileset, 0, 0).setScale(3);\r\n        const collisionLayer = map.createDynamicLayer(\"Trees\", tileset2, 0, 0).setScale(3);\r\n        const layer3 = map.createDynamicLayer(\"Bridge\", tileset2, 0, 0).setScale(3);\r\n        collisionLayer.setCollisionByProperty({ canCollide: true });\r\n\r\n        this.matter.world.convertTilemapLayer(collisionLayer);\r\n    \r\n\r\n        //collisionLayer.setDepth(2);\r\n        this._player = this.matter.add.image(450,150,'car').setScale(1/20);\r\n        this._player.thrust(0.1);\r\n        //this._player.setInertia(body,10);\r\n        \r\n        //this._F11 = this.input.keyboard.addKey(this.Keyboard.F11);  //Fix\r\n        this._score = this.add.text(16, 16, this._text, {\r\n                font: \"18px monospace\",\r\n                fill: \"#ffffff\",\r\n                padding: { x: 20, y: 10 },\r\n                backgroundColor: \"#050505\"\r\n            })\r\n            .setScrollFactor(0);\r\n\r\n        this._socialscore = this.add.text(16, 60, \"Social Score: 10/10\", {\r\n                font: \"18px monospace\",\r\n                fill: \"#ffffff\",\r\n                padding: { x: 20, y: 10 },\r\n                backgroundColor: \"#050505\"\r\n            })\r\n            .setScrollFactor(0);\r\n        \r\n        // Camera View Settings\r\n        const camera = this.cameras.main;\r\n        camera.startFollow(this._player);\r\n        camera.setBounds(0, 0, 2300, 1530);\r\n\r\n\r\n        // DEBUG Rules\r\n        // this.matter.world.createDebugGraphic();\r\n        // this.matter.world.drawDebug = false;\r\n        // this.input.keyboard.on(\"keydown_D\", event => {\r\n        //     this.matter.world.drawDebug = !this.matter.world.drawDebug;\r\n        //     this.matter.world.debugGraphic.clear();\r\n        // });\r\n\r\n        // Update Damage taken by player \r\n        let healthvalue = this._health;\r\n        this.matter.world.on('collisionstart', function (event, bodyA, bodyB) {\r\n            healthvalue = healthvalue - Math.floor(Math.random()*(8)+1);\r\n            if(healthvalue > 0 && this.scene._socialscorevalue > 0 )\r\n            {\r\n                this.scene._text = \"Health: \" + healthvalue + \"%\";\r\n                this.scene._score.setText(this.scene._text);    \r\n            } \r\n            else\r\n            {\r\n                // Game Over: Send to new Game Over scene\r\n                this.scene.endGame();\r\n            }\r\n        });\r\n\r\n\r\n        // Phone Graphic\r\n        /// We create a Container for the Phone \r\n        this._phone = this.add.image( width*0.85 , height*0.8 ,\"phone\").setScale(0.5).setDepth(10).setScrollFactor(0);\r\n        this._phonescreen_bg = this.add.image(width*0.85,height*0.85, 'screen_bg').setScale(0.9).setDepth(8).setScrollFactor(0);\r\n        this._question = this.add.text(width*0.75,height*0.6, \"Wanna Hangout?\", {\r\n            font: \"15px monospace\",\r\n            fill: \"#ffffff\",padding: { x: 15, y: 10 },backgroundColor: \"#000000\"}).setDepth(11).setScrollFactor(0).setResolution(10);\r\n        this._option1 = this.add.text(width*0.78,height*0.7, 'Bye').setFontSize(15).setDepth(11).setScrollFactor(0);\r\n        this._option2 = this.add.text(width*0.78,height*0.8, 'I Dont Care').setFontSize(15).setDepth(11).setScrollFactor(0);\r\n        this._option3 = this.add.text(width*0.78,height*0.9, 'Maybe').setFontSize(15).setDepth(11).setScrollFactor(0);\r\n\r\n        \r\n        let option1_bar = HighlightBar.fillRect(width*0.78,height*0.69, 300 , 30).setAlpha(0).setDepth(10);\r\n        let option2_bar = HighlightBar.fillRect(width*0.78,height*0.79, 300 , 30).setAlpha(0).setDepth(10);\r\n        let option3_bar = HighlightBar.fillRect(width*0.78,height*0.89, 300 , 30).setAlpha(0).setDepth(10);\r\n            \r\n        this._lastphoneEvent = this.time.now;\r\n\r\n        this._phone.setAlpha(0);\r\n        this._phonescreen_bg.setAlpha(0);\r\n        this._question.setAlpha(0);\r\n        this._option1.setAlpha(0);\r\n        this._option2.setAlpha(0);\r\n        this._option3.setAlpha(0);\r\n          \r\n\r\n        //Interactive Setup\r\n        this.phoneHighlight(this._option1, option1_bar);\r\n        this.phoneHighlight(this._option2, option2_bar);\r\n        this.phoneHighlight(this._option3, option3_bar);\r\n\r\n\r\n        \r\n        //let timedEvent = this.time.now;\r\n        //console.log(timedEvent);\r\n\r\n        \r\n        \r\n        //delayedCall(3000, this.onPhoneSubmit, [], this);\r\n\r\n\r\n    }\r\n\r\n    update(time, delta)\r\n    {\r\n        //controls.update(delta);\r\n        let cursors = //this.input.keyboard.createCursorKeys();\r\n        this.input.keyboard.addKeys({up:Phaser.Input.Keyboard.KeyCodes.W,down:Phaser.Input.Keyboard.KeyCodes.S,left:Phaser.Input.Keyboard.KeyCodes.A,right:Phaser.Input.Keyboard.KeyCodes.D});\r\n        const { width, height } = this.sys.game.config;\r\n\r\n        //this._player.setVelocity(0);\r\n        //this._player.velocity.normalize().scale(playerSpeed);\r\n\r\n        this._player.setFrictionAir(0.15);\r\n        this._player.setMass(100);\r\n        this._player.setFixedRotation();\r\n\r\n        // Forward Motion \r\n        if (cursors.up.isDown)\r\n        {\r\n            this._player.thrust(this._thrust);\r\n        }\r\n        else if (cursors.down.isDown)\r\n        {\r\n            this._player.thrust(-this._thrust*0.8);\r\n        }\r\n\r\n\r\n        // Turning Motion\r\n        if (cursors.left.isDown)\r\n        {\r\n            this._player.setAngularVelocity( - this._angularVel);   \r\n        }\r\n        else if (cursors.right.isDown)\r\n        {\r\n            this._player.setAngularVelocity( this._angularVel);\r\n        }        \r\n        // if(this._F11.isDown)\r\n        // {\r\n        //     /**\r\n        //      * this._map.height = window.screen.height;\r\n        //      * this._map.width = window.screen.width;\r\n        //      */\r\n        // }\r\n\r\n\r\n        // Timer Setup for Phone Events\r\n        if(this.time.now - (this._lastphoneEvent + this._phoneEventTimer*1000) > 0)\r\n        {\r\n            let i = this._solved;\r\n            console.log(i);\r\n            switch(i)\r\n            {\r\n                case 0:  this.onPhoneSubmit(\"How was your day?\", \"💩\" , \"💩\" , \"😀\", \"😀\"); break;\r\n                case 1:  this.onPhoneSubmit(\"Wanna Go Out?\", \"With U?😂\" , \"💩\" , \"Yes!\", \"Yes!\"); break;\r\n                case 2:  this.onPhoneSubmit(\"I'm Leaving You?\", \"Okay\" , \"Lmao\" , \"NO\", \"NO\"); break;\r\n                default: i = 0;\r\n            }\r\n            this._solved = i+1;\r\n\r\n        }\r\n        else\r\n        {\r\n            //Nothing\r\n        }\r\n\r\n\r\n        // Lose if Score too low \r\n        if(this._socialscorevalue <= 0)\r\n        {\r\n            this.endGame();\r\n        }\r\n\r\n    }\r\n\r\n    endGame() {\r\n        this.scene.start( ActiveScene.AvailableScenes.GameOver, \"Minimap -> Game Over\" );\r\n    }\r\n\r\n    onPhoneSubmit (q, o1, o2, o3, correct_o)\r\n    {\r\n        this._question.setText(q).setResolution(1);\r\n        this._option1.setText(o1).setResolution(1);\r\n        this._option2.setText(o2).setResolution(1);\r\n        this._option3.setText(o3).setResolution(1);\r\n        this._correct_o = (correct_o);\r\n\r\n        console.log(\"Phone Event Triggerrred\");\r\n        this._lastphoneEvent = this.time.now;\r\n        if(this._phoneEventTimer - 1 > 5)\r\n        {\r\n            // Fade In Phone Overlay\r\n            this.tweens.add({targets: this._phone,alpha: 1,duration: 2000,ease: 'Power2'}, this);\r\n            this.tweens.add({targets: this._phonescreen_bg,alpha: 1,duration: 2000,ease: 'Power2'}, this);\r\n            this.tweens.add({targets: this._question,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n            this.tweens.add({targets: this._option1,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n            this.tweens.add({targets: this._option2,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n            this.tweens.add({targets: this._option3,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n\r\n            this._phoneEventTimer -= 1;\r\n        }\r\n        else \r\n        {\r\n            //Do Nothing\r\n            // Fade In Phone Overlay\r\n            this.tweens.add({targets: this._phone,alpha: 1,duration: 1000,ease: 'Power2'}, this);\r\n            this.tweens.add({targets: this._phonescreen_bg,alpha: 1,duration: 1000,ease: 'Power2'}, this);\r\n            this.tweens.add({targets: this._question,alpha: 1,duration: 1000,ease: 'Power2',loop: -1}, this);\r\n            this.tweens.add({targets: this._option1,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n            this.tweens.add({targets: this._option2,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n            this.tweens.add({targets: this._option3,alpha: 1,duration: 1000,ease: 'Power2', loop: 1}, this);\r\n            console.log(\"Fastest Speed\");\r\n        }\r\n        \r\n\r\n        \r\n    }\r\n\r\n    phoneHighlight(option, highlight) \r\n    {\r\n\r\n        option.setInteractive();\r\n        option.on(\"pointerover\", () => {\r\n            option.setScale(1.5);\r\n        })\r\n\r\n        option.on(\"pointerout\", () => {\r\n            option.setScale(2/3);\r\n        })\r\n\r\n        option.on(\"pointerup\", () => {\r\n            \r\n            // Submission Check\r\n            console.log(\"Submission\", option._text);\r\n            this._phone.setAlpha(0);\r\n            this._phonescreen_bg.setAlpha(0);\r\n            this._question.setAlpha(0);\r\n            this._option1.setAlpha(0);\r\n            this._option2.setAlpha(0);\r\n            this._option3.setAlpha(0);\r\n\r\n            // Difficulty Increased\r\n            this._angularVel = this._angularVel + 0.04/3;\r\n            this._thrust = this._thrust + 0.3/3;\r\n\r\n            if(this._correct_o !== option._text)\r\n            {\r\n                this._socialscorevalue -= 5; \r\n                this._socialscore.setText(\"Social Score: \" + this._socialscorevalue + \"/10\");    \r\n            }\r\n        })\r\n    }\r\n\r\n}","import { ActiveScene } from './ACTIVE_SCENE.js';\r\n\r\n// Menu Scene\r\n/// Displays the Menu and shows options\r\n\r\nexport class GameOverScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: ActiveScene.AvailableScenes.GameOver\r\n        })\r\n    }\r\n\r\n    init(msg){\r\n        console.log(\"GameOver: \",msg);\r\n    }\r\n\r\n    preload(){\r\n    }\r\n\r\n    create(){\r\n        // Height and Width for screen\r\n        const { width, height } = this.sys.game.config;\r\n\r\n        const logo = this.add.image(400, 150, 'menu_logo' ).setDepth(2);\r\n        logo.setScale(2);\r\n\r\n        let carmouse = this.add.sprite(300,300,'car');\r\n        carmouse.setScale(1/16).setOrigin(0).setVisible(false);\r\n\r\n        let playButton = //this.add.text(350,300, 'Play', { fontFamily: '\"Roboto Condensed\"' });\r\n        this.add\r\n        .text(220, 300 , \"Play Again!\", {font: \"18px monospace\", color: \"white\"}).setShadow(5, 5, \"#5588EE\", 0, true, true);\r\n        playButton.setScale(3).setResolution(5);\r\n        playButton.setInteractive();\r\n        playButton.on(\"pointerover\", () => {\r\n            carmouse.setVisible(true);\r\n        })\r\n\r\n        playButton.on(\"pointerout\", () => {\r\n            carmouse.setVisible(false);\r\n        })\r\n\r\n        playButton.on(\"pointerup\", () => {\r\n            console.log(\"Start Game\");\r\n            this.scene.start( ActiveScene.AvailableScenes.Menu, \"GameOver -> Menu\" );\r\n        })\r\n    }\r\n}","import { LoadScene } from './scenes/LoadScene';\r\nimport { MenuScene } from './scenes/MenuScene';\r\nimport { MinimapScene } from './scenes/MinimapScene';\r\nimport { GameOverScene } from './scenes/GameOverScene';\r\n\r\nconst config = {\r\n    type: Phaser.AUTO, // Which renderer to use\r\n    width: 800, // Canvas width in pixels\r\n    height: 600, // Canvas height in pixels\r\n    backgroundColor: '#f09020',\r\n    parent: \"game-container\",\r\n    scene: [\r\n      LoadScene, \r\n      MenuScene,\r\n      MinimapScene,\r\n      GameOverScene\r\n    ],\r\n    render:{\r\n      pixelArt: true\r\n    },\r\n    physics: {\r\n      default: \"matter\",\r\n      matter: {\r\n        gravity: { x: 0, y: 0 } // 2D Game does not need Gravity\r\n      }\r\n    }\r\n  };\r\n  \r\n  const game = new Phaser.Game(config);\r\n  \r\n  // function preload() {\r\n  //   // Runs once, loads up assets like images and audio\r\n  //   this.load.image(\"grass\", \"./asset/png/tile/Background_Tiles/Grass_Tile.png\");\r\n  //   //this.load.image(\"grass-tiles\", \"../spritesheet/grass_ss.png\");\r\n  //   this.load.tilemap(\"grass-tiles\", \"../spritesheet/grass_ss.png\",32,32);\r\n\r\n  //   this.load.image('car', './assets/png/car/Car_1_Main_Positions/Car_1_01.png');\r\n  //   this.load.tilemapTiledJSON('map', './spritesheet/grass_ss.json');\r\n  //   this.load.image('tiles1', 'assets/tilemaps/tiles/super-mario.png');\r\n  // }\r\n  \r\n  // function create() {\r\n  //   // Runs once, after all assets in preload are loaded\r\n  //   const level = [\r\n  //       [  0,   2,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ]\r\n  //     ];\r\n\r\n  //     map = game.add.tilemap('map');\r\n      \r\n\r\n  //     var background = this.add.sprite(0, 0, \"grass\", \"./asset/png/tile/Grass_Tile (2).png\");\r\n  //     const map = this.make.tilemap({ data: level, tileWidth: 50, tileHeight: 50 });\r\n  //     const tiles = map.addTilesetImage(\"grass-tiles\");\r\n  //     const layer = map.createStaticLayer(0, tiles, 0, 0);\r\n  //     //background.setScale(3, 2.4);\r\n  // }\r\n  \r\n  // function update(time, delta) {\r\n  //   // Runs once per frame for the duration of the scene\r\n  // }"]}