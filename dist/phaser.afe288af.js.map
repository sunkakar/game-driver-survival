{"version":3,"sources":["scenes/ACTIVE_SCENE.js","scenes/LoadScene.js","scenes/MenuScene.js","scenes/MinimapScene.js","phaser.js"],"names":["ActiveScene","AvailableScenes","Load","Menu","Minimap","LoadScene","key","msg","console","log","loadBar","add","graphics","fillStyle","color","i","load","spritesheet","frameHeight","frameWidth","image","on","percentage","fillRect","game","renderer","height","width","scene","start","Phaser","Scene","MenuScene","sys","config","logo","setDepth","setScale","carmouse","sprite","setOrigin","setVisible","playButton","text","font","setShadow","setResolution","setInteractive","MinimapScene","tilemapTiledJSON","map","make","tilemap","tileset1","addTilesetImage","tileset2","type","AUTO","backgroundColor","parent","render","pixelArt","Game"],"mappings":";;AIAA;;AACA;;AACA,AJFO,IAAMA,WAAW,GAAG;AACvBC,ACDJ,ACAA,ACAA,EHCIA,eAAe,EAAE;AIGrB,AJFQC,IIEFgC,AJFEhC,IAAI,EIEA,AJFE,GIEC,GJHM;AIIjBsD,AJFIrD,EIEJqD,EJFIrD,EIEA,EAAE2B,AJFE,EAAE,IIEE,CAAC2B,CJJI,GIGN;AACQ,AJDfrD,IAAAA,OAAO,EAAE;AIEbuB,AJLiB,EIKjBA,KAAK,EAAE,GAFI;AAEC,AJNW,CAApB;AIOHD,EAAAA,MAAM,EAAE,GAHG;AAGE;AACbgC,EAAAA,eAAe,EAAE,SAJN;AAKXC,EAAAA,MAAM,EAAE,gBALG;AAKe;AAC1B;AACA;AACA;AACA;AACA;AACA/B,EAAAA,KAAK,EAAE,CACLvB,oBADK,EAEL2B,oBAFK,EAGLgB,0BAHK,CAXI;AAgBXY,EAAAA,MAAM,EAAC;AACLC,IAAAA,QAAQ,EAAE;AADL;AAhBI,AHFf,ACAA,CEEA,GDDab;ACuBX,AHvBF,ACAA,IEuBQxB,IAAI,GAAG,IAAIM,MAAM,CAACgC,IAAX,CAAgB5B,MAAhB,CAAb,EAEA;AACA,IHxBW7B,ACAA2B;AEyBX;AACA;AACA,AD5BE,0BAAa;AC8Bf,AD9Be;AC+Bf,AH7BE,ACAA,uBDAa,ACAA;AE8Bf,AH9Be,ACAA,ACFA,qFACH;ACgCZ,AD/BU1B,MAAAA,GAAG,EAAEN,0BAAYC,eAAZ,CAA4BG;ACiC3C,AHjCe,ACAA,ACDH,KADG,6EFGH,ACAA;AEiCZ,AHhCUE,ACAAA,ACAP,MFAOA,ACAAA,GDAG,ACAA,EDAEN,ACAAA,0BDAYC,ACAAA,eDAZ,ACAA,CDA4BC,ACAAC;AEiC3C,AHlCY,ACAA,KDDG,ACAA;AEoCf,AHhCG,ACAA;AEiCH;AACA,yBDlCOI,KAAI;ACmCX,ADlCMC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBF,GAAxB;ACmCN,ADlCG,yBFAIA,ACAAA,KDAI,ACAA;AEmCX,AHlCMC,ACAAA,MDAAA,ACAAA,ODAO,ACAA,CDACC,ACAAA,GDAR,ACAA,CDAY,ACAA,QDAZ,ACAA,EDAqBF,ACAAA,GDArB,ACAA;AEmCN,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","file":"phaser.afe288af.js","sourceRoot":"..","sourcesContent":["export const ActiveScene = {\r\n    AvailableScenes: {\r\n        Load: \"Load\",\r\n        Menu: \"Menu\",\r\n        Minimap: \"Minimap\"\r\n    }\r\n}","import { ActiveScene } from './ACTIVE_SCENE.js';\r\n\r\n// Load Scene\r\n/// Loads assets and Transfers over control to the Menu Scene\r\n\r\nexport class LoadScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: ActiveScene.AvailableScenes.Load\r\n        })\r\n    }\r\n\r\n    init(msg){\r\n        console.log(\"Load: \",msg);\r\n    }\r\n\r\n    preload(){\r\n\r\n        let loadBar = this.add.graphics({\r\n            fillStyle: {\r\n                color: 0xffffff\r\n            }\r\n        })\r\n\r\n        for(let i = 0; i< 100; i++)\r\n        {\r\n            this.load.spritesheet(\"grass_tiles\",\"../asset/spritesheet/grass_ss.png\" , {\r\n                frameHeight: 512,\r\n                frameWidth: 512\r\n            })\r\n\r\n            this.load.image('car', './asset/png/car/Car_1_Main_Positions/Car_1_01.png');\r\n            this.load.image('menu_logo', './asset/menu/game-logo.png');\r\n            this.load.image('menu_bg', './asset/menu/menu-bg.png');\r\n\r\n            //this.load.audio()\r\n        }\r\n\r\n        this.load.on(\"progress\", (percentage) => {\r\n                loadBar.fillRect(0, this.game.renderer.height / 2, this.game.renderer.width * percentage, 50);\r\n        })\r\n    }\r\n    \r\n\r\n    create(){\r\n        //this.scene.add(ActiveScene.AvailableScenes.Menu, MenuScene, false)\r\n        this.scene.start( ActiveScene.AvailableScenes.Menu, \"Load -> Menu\" );\r\n        \r\n    }\r\n}","import { ActiveScene } from './ACTIVE_SCENE.js';\r\n\r\n// Menu Scene\r\n/// Displays the Menu and shows options\r\n\r\nexport class MenuScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: ActiveScene.AvailableScenes.Menu\r\n        })\r\n    }\r\n\r\n    init(msg){\r\n        console.log(\"Menu: \",msg);\r\n    }\r\n\r\n    preload(){\r\n    }\r\n\r\n    create(){\r\n        // Height and Width for screen\r\n        const { width, height } = this.sys.game.config;\r\n\r\n        const logo = this.add.image(400, 150, 'menu_logo' ).setDepth(2);\r\n        logo.setScale(2);\r\n\r\n        let carmouse = this.add.sprite(300,300,'car');\r\n        carmouse.setScale(1/16).setOrigin(0).setVisible(false);\r\n\r\n        let playButton = //this.add.text(350,300, 'Play', { fontFamily: '\"Roboto Condensed\"' });\r\n        this.add\r\n        .text(350, 300 , \"Play\", {font: \"18px monospace\", color: \"white\"}).setShadow(5, 5, \"#5588EE\", 0, true, true);\r\n        playButton.setScale(3).setResolution(5);\r\n        playButton.setInteractive();\r\n        playButton.on(\"pointerover\", () => {\r\n            carmouse.setVisible(true);\r\n        })\r\n\r\n        playButton.on(\"pointerout\", () => {\r\n            carmouse.setVisible(false);\r\n        })\r\n\r\n        playButton.on(\"pointerup\", () => {\r\n            console.log(\"Start Game\");\r\n            //this.scene.start( ActiveScene.AvailableScenes.Minimap, \"Manu -> Minimap\" );\r\n        })\r\n\r\n        this.scene.start( ActiveScene.AvailableScenes.Minimap, \"Manu -> Minimap\" ); //MOVE\r\n        //playButton.on()\r\n    }\r\n}","import { ActiveScene } from './ACTIVE_SCENE.js';\r\n\r\n\r\nexport class MinimapScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: ActiveScene.AvailableScenes.Minimap\r\n        })\r\n    }\r\n\r\n    init(msg){\r\n        console.log(\"Minimap: \",msg);\r\n    }\r\n\r\n    preload(){\r\n\r\n        this.load.image('menu_bg', './asset/menu/menu-bg.png');\r\n        //this.load.spritesheet('base_tiles_ss', './asset/spritesheet/tiles_spritesheet.png');\r\n        //this.load.atlas('base_map', './asset/spritesheet/tiles_spritesheet.png', 'asset/spritesheet/tiles_spritesheet.json');\r\n\r\n        this.load.image(\"tiles\", \"dist/asset/spritesheet/roads2W.png\");\r\n        this.load.tilemapTiledJSON(\"map\", \"dist/asset/spritesheet/tile_map.json\");\r\n\r\n    }\r\n\r\n    create(){\r\n        //this.scene.start( ActiveScene.AvailableScenes.Menu, \"Here!\" )\r\n        //const background = this.add.image('base_map', 'Decor/Racing_Lights (2).png').setOrigin(0) //this.add.image(0,0, \"menu_bg\").setOrigin(0);\r\n        //background.displayWidth = 800;\r\n        //background.displayHeight = 600;\r\n\r\n        const map = this.make.tilemap({ key: \"map\" });\r\n        const tileset1 = map.addTilesetImage(\"tuxmon-sample-32px-extruded\", \"tiles\");\r\n        const tileset2 = map.addTilesetImage(\"tuxmon-sample-32px-extruded\", \"tiles\");\r\n\r\n    }\r\n}","import { LoadScene } from './scenes/LoadScene';\r\nimport { MenuScene } from './scenes/MenuScene';\r\nimport { MinimapScene } from './scenes/MinimapScene';\r\n\r\nconst config = {\r\n    type: Phaser.AUTO, // Which renderer to use\r\n    width: 800, // Canvas width in pixels\r\n    height: 600, // Canvas height in pixels\r\n    backgroundColor: '#fffff0',\r\n    parent: \"game-container\", // ID of the DOM element to add the canvas to\r\n    // scene: {\r\n    //   preload: preload,\r\n    //   create: create,\r\n    //   update: update\r\n    // }\r\n    scene: [\r\n      LoadScene, \r\n      MenuScene,\r\n      MinimapScene\r\n    ],\r\n    render:{\r\n      pixelArt: true\r\n    }\r\n\r\n  };\r\n  \r\n  const game = new Phaser.Game(config);\r\n  \r\n  // function preload() {\r\n  //   // Runs once, loads up assets like images and audio\r\n  //   this.load.image(\"grass\", \"./asset/png/tile/Background_Tiles/Grass_Tile.png\");\r\n  //   //this.load.image(\"grass-tiles\", \"../spritesheet/grass_ss.png\");\r\n  //   this.load.tilemap(\"grass-tiles\", \"../spritesheet/grass_ss.png\",32,32);\r\n\r\n  //   this.load.image('car', './assets/png/car/Car_1_Main_Positions/Car_1_01.png');\r\n  //   this.load.tilemapTiledJSON('map', './spritesheet/grass_ss.json');\r\n  //   this.load.image('tiles1', 'assets/tilemaps/tiles/super-mario.png');\r\n  // }\r\n  \r\n  // function create() {\r\n  //   // Runs once, after all assets in preload are loaded\r\n  //   const level = [\r\n  //       [  0,   2,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ]\r\n  //     ];\r\n\r\n  //     map = game.add.tilemap('map');\r\n      \r\n\r\n  //     var background = this.add.sprite(0, 0, \"grass\", \"./asset/png/tile/Grass_Tile (2).png\");\r\n  //     const map = this.make.tilemap({ data: level, tileWidth: 50, tileHeight: 50 });\r\n  //     const tiles = map.addTilesetImage(\"grass-tiles\");\r\n  //     const layer = map.createStaticLayer(0, tiles, 0, 0);\r\n  //     //background.setScale(3, 2.4);\r\n  // }\r\n  \r\n  // function update(time, delta) {\r\n  //   // Runs once per frame for the duration of the scene\r\n  // }"]}