{"version":3,"sources":["scenes/ACTIVE_SCENE.js","scenes/LoadScene.js","scenes/MenuScene.js","scenes/MinimapScene.js","phaser.js"],"names":["ActiveScene","AvailableScenes","Load","Menu","Minimap","LoadScene","key","msg","console","log","scene","start","Phaser","Scene","MenuScene","MinimapScene","config","type","AUTO","width","height","parent"],"mappings":";;AIAA;;AACA;;AACA,AJFO,IAAMA,WAAW,GAAG;AACvBC,ACDJ,ACAA,ACAA,EHCIA,eAAe,EAAE;AIGrB,AJFQC,IIEFc,AJFEd,IAAI,EIEA,AJFE,GIEC,GJHM;AIIjBe,AJFId,EIEJc,EJFId,EIEA,EAAES,AJFE,EAAE,IIEE,CAACM,CJJI,GIGN;AACQ,AJDfd,IAAAA,OAAO,EAAE;AIEbe,AJLiB,EIKjBA,KAAK,EAAE,GAFI;AAEC,AJNW,CAApB;AIOHC,EAAAA,MAAM,EAAE,GAHG;AAGE;AACbC,EAAAA,MAAM,EAAE,gBAJG;AAIe;AAC1B;AACA;AACA;AACA;AACA;AACAX,EAAAA,KAAK,EAAE,CACLL,oBADK,EAELS,oBAFK,EAGLC,0BAHK;AAVI,CAAf,EAkBE;AAEA;AACA;AACA;AACA,IHxBWV,ACAAS,ACAAC;ACyBX;AAEA;AACA;AACA;AACA,AH7BE,ACAA,ACAA,uBFAa,ACAA,GCAA;AC+Bf,AH/Be,ACAA,ACAA;ACgCf;AACA,AHjCe,ACAA,ACAA,kFFCH,ACAA,GCAA;ACiCZ,AHhCUT,ACAAA,ACAAA,MFAAA,ACAAA,ACAAA,GFAG,ACAA,ACAA,EFAEN,ACAAA,ACAAA,0BFAYC,ACAAA,ACAAA,eFAZ,ACAA,ACAA,CFA4BC,ACAAC,ACAAA;ACiC3C,AHlCY,ACAA,ACAA,KFDG,ACAA,ACAA;ACoCf,AHhCG,ACAA,ACAA;ACiCH;AACA;AACA;AACA,yBHlCOI,ACAAA,ACAAA,KFAI,ACAA,ACAA;ACmCX,AHlCMC,ACAAA,ACAAA,MFAAA,ACAAA,ACAAA,OFAO,ACAA,ACAA,CFACC,ACAAA,ACAAA,GFAR,ACAA,ACAA,CFAY,ACAA,ACAA,QFAZ,ACAA,EDAqBF,ACAAA,CCArB,EFAA,ACAA,ACAwBA,GAAxB;ACmCN,AHlCG,ACAA,ACAA;ACmCH;AACA;AACA,8BHnCW,ACAA,ACAA,CFER,ACAA,ACAA;ACmCH;AAGA;AACA,6BHrCU,ACAA,ACAA,CDCJ,ACAA;ACqCN,AHrCM,ACCH,ACAA;ACqCH,AHrCM,WAAKG,KAAL,CAAWC,KAAX,CAAkBX,0BAAYC,eAAZ,CAA4BE,IAA9C,EAAoD,OAApD;AGsCN,AHpCG;AGqCH;AAEA,EF1D6BS,ACAGA,MDAG,ACAG,CDAFC,ACAGA;AC2DvC;AACA,EH5D6BD,MAAM,CAACC","file":"phaser.afe288af.js","sourceRoot":"..","sourcesContent":["export const ActiveScene = {\r\n    AvailableScenes: {\r\n        Load: \"Load\",\r\n        Menu: \"Menu\",\r\n        Minimap: \"Minimap\"\r\n    }\r\n}","import { ActiveScene } from './ACTIVE_SCENE.js';\r\n\r\n\r\nexport class LoadScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: ActiveScene.AvailableScenes.Load\r\n        })\r\n    }\r\n\r\n    init(msg){\r\n        console.log(\"Load: \",msg);\r\n    }\r\n\r\n    preload(){\r\n\r\n    }\r\n\r\n    create(){\r\n        //this.scene.add(ActiveScene.AvailableScenes.Menu, MenuScene, false)\r\n        this.scene.start( ActiveScene.AvailableScenes.Menu, \"Here!\" );\r\n        \r\n    }\r\n}","import { ActiveScene } from './ACTIVE_SCENE.js';\r\n\r\n\r\nexport class MenuScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: ActiveScene.AvailableScenes.Menu\r\n        })\r\n    }\r\n\r\n    init(msg){\r\n        console.log(\"Menu: \",msg);\r\n    }\r\n\r\n    preload(){\r\n\r\n    }\r\n\r\n    create(){\r\n        //this.scene.start( ActiveScene.AvailableScenes.Menu, \"Here!\" )\r\n    }\r\n}","import { ActiveScene } from './ACTIVE_SCENE.js';\r\n\r\n\r\nexport class MinimapScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: ActiveScene.AvailableScenes.Menu\r\n        })\r\n    }\r\n\r\n    init(msg){\r\n        console.log(\"Minimap: \",msg);\r\n    }\r\n\r\n    preload(){\r\n\r\n    }\r\n\r\n    create(){\r\n        //this.scene.start( ActiveScene.AvailableScenes.Menu, \"Here!\" )\r\n    }\r\n}","import { LoadScene } from './scenes/LoadScene.js';\r\nimport { MenuScene } from './scenes/MenuScene.js';\r\nimport { MinimapScene } from './scenes/MinimapScene.js';\r\n\r\nconst config = {\r\n    type: Phaser.AUTO, // Which renderer to use\r\n    width: 800, // Canvas width in pixels\r\n    height: 600, // Canvas height in pixels\r\n    parent: \"game-container\", // ID of the DOM element to add the canvas to\r\n    // scene: {\r\n    //   preload: preload,\r\n    //   create: create,\r\n    //   update: update\r\n    // }\r\n    scene: [\r\n      LoadScene, \r\n      MenuScene,\r\n      MinimapScene\r\n    ]\r\n\r\n  };\r\n  \r\n  // const game = new Phaser.Game(config);\r\n  \r\n  // function preload() {\r\n  //   // Runs once, loads up assets like images and audio\r\n  //   this.load.image(\"grass\", \"./asset/png/tile/Background_Tiles/Grass_Tile.png\");\r\n  //   //this.load.image(\"grass-tiles\", \"../spritesheet/grass_ss.png\");\r\n  //   this.load.tilemap(\"grass-tiles\", \"../spritesheet/grass_ss.png\",32,32);\r\n\r\n  //   this.load.image('car', './assets/png/car/Car_1_Main_Positions/Car_1_01.png');\r\n  //   this.load.tilemapTiledJSON('map', './spritesheet/grass_ss.json');\r\n  //   this.load.image('tiles1', 'assets/tilemaps/tiles/super-mario.png');\r\n  // }\r\n  \r\n  // function create() {\r\n  //   // Runs once, after all assets in preload are loaded\r\n  //   const level = [\r\n  //       [  0,   2,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ],\r\n  //       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ]\r\n  //     ];\r\n\r\n  //     map = game.add.tilemap('map');\r\n      \r\n\r\n  //     var background = this.add.sprite(0, 0, \"grass\", \"./asset/png/tile/Grass_Tile (2).png\");\r\n  //     const map = this.make.tilemap({ data: level, tileWidth: 50, tileHeight: 50 });\r\n  //     const tiles = map.addTilesetImage(\"grass-tiles\");\r\n  //     const layer = map.createStaticLayer(0, tiles, 0, 0);\r\n  //     //background.setScale(3, 2.4);\r\n  // }\r\n  \r\n  // function update(time, delta) {\r\n  //   // Runs once per frame for the duration of the scene\r\n  // }"]}